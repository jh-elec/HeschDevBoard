
DevBoard_7Segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a44  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000dc  00800060  00001a44  00001af8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000540  0080013c  0080013c  00001bd4  2**0
                  ALLOC
  3 .eeprom       00000001  00810000  00810000  00001bd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         00000024  00000000  00000000  00001bd8  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      0000002a  00000000  00000000  00001bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000030  00000000  00000000  00001c26  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c58  2**2
                  CONTENTS, READONLY
  8 .debug_aranges 00000398  00000000  00000000  00001c98  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00004299  00000000  00000000  00002030  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00001559  00000000  00000000  000062c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00002413  00000000  00000000  00007822  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00000910  00000000  00000000  00009c38  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000011ff  00000000  00000000  0000a548  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00002f43  00000000  00000000  0000b747  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000328  00000000  00000000  0000e68a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
       4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      1c:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__vector_7>
      20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      34:	0c 94 85 04 	jmp	0x90a	; 0x90a <__vector_13>
      38:	0c 94 b0 04 	jmp	0x960	; 0x960 <__vector_14>
      3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      54:	ab 02       	muls	r26, r27
      56:	d6 02       	muls	r29, r22
      58:	d6 02       	muls	r29, r22
      5a:	d6 02       	muls	r29, r22
      5c:	d6 02       	muls	r29, r22
      5e:	b1 02       	muls	r27, r17
      60:	d6 02       	muls	r29, r22
      62:	d6 02       	muls	r29, r22
      64:	d6 02       	muls	r29, r22
      66:	d6 02       	muls	r29, r22
      68:	b6 02       	muls	r27, r22
      6a:	d6 02       	muls	r29, r22
      6c:	d6 02       	muls	r29, r22
      6e:	d6 02       	muls	r29, r22
      70:	d6 02       	muls	r29, r22
      72:	bc 02       	muls	r27, r28
      74:	d6 02       	muls	r29, r22
      76:	d6 02       	muls	r29, r22
      78:	d6 02       	muls	r29, r22
      7a:	d6 02       	muls	r29, r22
      7c:	c1 02       	muls	r28, r17
      7e:	d6 02       	muls	r29, r22
      80:	d6 02       	muls	r29, r22
      82:	d6 02       	muls	r29, r22
      84:	d6 02       	muls	r29, r22
      86:	c7 02       	muls	r28, r23
      88:	d6 02       	muls	r29, r22
      8a:	d6 02       	muls	r29, r22
      8c:	d6 02       	muls	r29, r22
      8e:	d6 02       	muls	r29, r22
      90:	cc 02       	muls	r28, r28
      92:	d6 02       	muls	r29, r22
      94:	d6 02       	muls	r29, r22
      96:	d6 02       	muls	r29, r22
      98:	d6 02       	muls	r29, r22
      9a:	d2 02       	muls	r29, r18

0000009c <__ctors_end>:
      9c:	11 24       	eor	r1, r1
      9e:	1f be       	out	0x3f, r1	; 63
      a0:	cf e5       	ldi	r28, 0x5F	; 95
      a2:	d8 e0       	ldi	r29, 0x08	; 8
      a4:	de bf       	out	0x3e, r29	; 62
      a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
      a8:	11 e0       	ldi	r17, 0x01	; 1
      aa:	a0 e6       	ldi	r26, 0x60	; 96
      ac:	b0 e0       	ldi	r27, 0x00	; 0
      ae:	e4 e4       	ldi	r30, 0x44	; 68
      b0:	fa e1       	ldi	r31, 0x1A	; 26
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x10>
      b4:	05 90       	lpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	ac 33       	cpi	r26, 0x3C	; 60
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0xc>

000000be <__do_clear_bss>:
      be:	26 e0       	ldi	r18, 0x06	; 6
      c0:	ac e3       	ldi	r26, 0x3C	; 60
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	ac 37       	cpi	r26, 0x7C	; 124
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	0e 94 41 08 	call	0x1082	; 0x1082 <main>
      d2:	0c 94 20 0d 	jmp	0x1a40	; 0x1a40 <_exit>

000000d6 <__bad_interrupt>:
      d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <i2c_delay_T2>:
      da:	00 c0       	rjmp	.+0      	; 0xdc <i2c_delay_T2+0x2>
      dc:	00 c0       	rjmp	.+0      	; 0xde <i2c_delay_T2+0x4>
      de:	00 c0       	rjmp	.+0      	; 0xe0 <i2c_delay_T2+0x6>
      e0:	00 c0       	rjmp	.+0      	; 0xe2 <i2c_delay_T2+0x8>
      e2:	00 c0       	rjmp	.+0      	; 0xe4 <i2c_delay_T2+0xa>
      e4:	00 c0       	rjmp	.+0      	; 0xe6 <i2c_delay_T2+0xc>
      e6:	00 00       	nop
      e8:	08 95       	ret

000000ea <i2c_init>:
      ea:	a1 98       	cbi	0x14, 1	; 20
      ec:	a0 98       	cbi	0x14, 0	; 20
      ee:	a9 98       	cbi	0x15, 1	; 21
      f0:	a8 98       	cbi	0x15, 0	; 21
      f2:	08 95       	ret

000000f4 <i2c_start>:
      f4:	a1 9a       	sbi	0x14, 1	; 20
      f6:	f1 df       	rcall	.-30     	; 0xda <i2c_delay_T2>
      f8:	1d d0       	rcall	.+58     	; 0x134 <i2c_write>
      fa:	08 95       	ret

000000fc <i2c_rep_start>:
      fc:	a0 9a       	sbi	0x14, 0	; 20
      fe:	ed df       	rcall	.-38     	; 0xda <i2c_delay_T2>
     100:	a1 98       	cbi	0x14, 1	; 20
     102:	eb df       	rcall	.-42     	; 0xda <i2c_delay_T2>
     104:	a0 98       	cbi	0x14, 0	; 20
     106:	e9 df       	rcall	.-46     	; 0xda <i2c_delay_T2>
     108:	a1 9a       	sbi	0x14, 1	; 20
     10a:	e7 df       	rcall	.-50     	; 0xda <i2c_delay_T2>
     10c:	13 d0       	rcall	.+38     	; 0x134 <i2c_write>
     10e:	08 95       	ret

00000110 <i2c_start_wait>:
     110:	08 2e       	mov	r0, r24

00000112 <i2c_start_wait1>:
     112:	a1 9a       	sbi	0x14, 1	; 20
     114:	e2 df       	rcall	.-60     	; 0xda <i2c_delay_T2>
     116:	80 2d       	mov	r24, r0
     118:	0d d0       	rcall	.+26     	; 0x134 <i2c_write>
     11a:	88 23       	and	r24, r24
     11c:	11 f0       	breq	.+4      	; 0x122 <i2c_start_wait_done>
     11e:	02 d0       	rcall	.+4      	; 0x124 <i2c_stop>
     120:	f8 cf       	rjmp	.-16     	; 0x112 <i2c_start_wait1>

00000122 <i2c_start_wait_done>:
     122:	08 95       	ret

00000124 <i2c_stop>:
     124:	a0 9a       	sbi	0x14, 0	; 20
     126:	a1 9a       	sbi	0x14, 1	; 20
     128:	d8 df       	rcall	.-80     	; 0xda <i2c_delay_T2>
     12a:	a0 98       	cbi	0x14, 0	; 20
     12c:	d6 df       	rcall	.-84     	; 0xda <i2c_delay_T2>
     12e:	a1 98       	cbi	0x14, 1	; 20
     130:	d4 df       	rcall	.-88     	; 0xda <i2c_delay_T2>
     132:	08 95       	ret

00000134 <i2c_write>:
     134:	08 94       	sec
     136:	88 1f       	adc	r24, r24
     138:	01 c0       	rjmp	.+2      	; 0x13c <i2c_write_first>

0000013a <i2c_write_bit>:
     13a:	88 0f       	add	r24, r24

0000013c <i2c_write_first>:
     13c:	59 f0       	breq	.+22     	; 0x154 <i2c_get_ack>
     13e:	a0 9a       	sbi	0x14, 0	; 20
     140:	18 f4       	brcc	.+6      	; 0x148 <i2c_write_low>
     142:	00 00       	nop
     144:	a1 98       	cbi	0x14, 1	; 20
     146:	02 c0       	rjmp	.+4      	; 0x14c <i2c_write_high>

00000148 <i2c_write_low>:
     148:	a1 9a       	sbi	0x14, 1	; 20
     14a:	00 c0       	rjmp	.+0      	; 0x14c <i2c_write_high>

0000014c <i2c_write_high>:
     14c:	c6 df       	rcall	.-116    	; 0xda <i2c_delay_T2>
     14e:	a0 98       	cbi	0x14, 0	; 20
     150:	c4 df       	rcall	.-120    	; 0xda <i2c_delay_T2>
     152:	f3 cf       	rjmp	.-26     	; 0x13a <i2c_write_bit>

00000154 <i2c_get_ack>:
     154:	a0 9a       	sbi	0x14, 0	; 20
     156:	a1 98       	cbi	0x14, 1	; 20
     158:	c0 df       	rcall	.-128    	; 0xda <i2c_delay_T2>
     15a:	a0 98       	cbi	0x14, 0	; 20

0000015c <i2c_ack_wait>:
     15c:	98 9b       	sbis	0x13, 0	; 19
     15e:	fe cf       	rjmp	.-4      	; 0x15c <i2c_ack_wait>
     160:	88 27       	eor	r24, r24
     162:	99 99       	sbic	0x13, 1	; 19
     164:	81 e0       	ldi	r24, 0x01	; 1
     166:	b9 df       	rcall	.-142    	; 0xda <i2c_delay_T2>
     168:	99 27       	eor	r25, r25
     16a:	08 95       	ret

0000016c <i2c_readNak>:
     16c:	88 27       	eor	r24, r24
     16e:	01 c0       	rjmp	.+2      	; 0x172 <i2c_read>

00000170 <i2c_readAck>:
     170:	81 e0       	ldi	r24, 0x01	; 1

00000172 <i2c_read>:
     172:	71 e0       	ldi	r23, 0x01	; 1

00000174 <i2c_read_bit>:
     174:	a0 9a       	sbi	0x14, 0	; 20
     176:	a1 98       	cbi	0x14, 1	; 20
     178:	b0 df       	rcall	.-160    	; 0xda <i2c_delay_T2>
     17a:	a0 98       	cbi	0x14, 0	; 20
     17c:	ae df       	rcall	.-164    	; 0xda <i2c_delay_T2>

0000017e <i2c_read_stretch>:
     17e:	98 9b       	sbis	0x13, 0	; 19
     180:	fe cf       	rjmp	.-4      	; 0x17e <i2c_read_stretch>
     182:	88 94       	clc
     184:	99 99       	sbic	0x13, 1	; 19
     186:	08 94       	sec
     188:	77 1f       	adc	r23, r23
     18a:	a0 f7       	brcc	.-24     	; 0x174 <i2c_read_bit>

0000018c <i2c_put_ack>:
     18c:	a0 9a       	sbi	0x14, 0	; 20
     18e:	81 30       	cpi	r24, 0x01	; 1
     190:	11 f0       	breq	.+4      	; 0x196 <i2c_put_ack_low>
     192:	a1 98       	cbi	0x14, 1	; 20
     194:	01 c0       	rjmp	.+2      	; 0x198 <i2c_put_ack_high>

00000196 <i2c_put_ack_low>:
     196:	a1 9a       	sbi	0x14, 1	; 20

00000198 <i2c_put_ack_high>:
     198:	a0 df       	rcall	.-192    	; 0xda <i2c_delay_T2>
     19a:	a0 98       	cbi	0x14, 0	; 20

0000019c <i2c_put_ack_wait>:
     19c:	98 9b       	sbis	0x13, 0	; 19
     19e:	fe cf       	rjmp	.-4      	; 0x19c <i2c_put_ack_wait>
     1a0:	9c df       	rcall	.-200    	; 0xda <i2c_delay_T2>
     1a2:	87 2f       	mov	r24, r23
     1a4:	99 27       	eor	r25, r25
     1a6:	08 95       	ret

000001a8 <buildVer>:
     1a8:	ec e3       	ldi	r30, 0x3C	; 60
     1aa:	f1 e0       	ldi	r31, 0x01	; 1
     1ac:	81 e3       	ldi	r24, 0x31	; 49
     1ae:	80 83       	st	Z, r24
     1b0:	3e e2       	ldi	r19, 0x2E	; 46
     1b2:	31 83       	std	Z+1, r19	; 0x01
     1b4:	20 e2       	ldi	r18, 0x20	; 32
     1b6:	22 83       	std	Z+2, r18	; 0x02
     1b8:	40 e3       	ldi	r20, 0x30	; 48
     1ba:	43 83       	std	Z+3, r20	; 0x03
     1bc:	34 83       	std	Z+4, r19	; 0x04
     1be:	25 83       	std	Z+5, r18	; 0x05
     1c0:	86 83       	std	Z+6, r24	; 0x06
     1c2:	95 e3       	ldi	r25, 0x35	; 53
     1c4:	97 83       	std	Z+7, r25	; 0x07
     1c6:	93 e3       	ldi	r25, 0x33	; 51
     1c8:	90 87       	std	Z+8, r25	; 0x08
     1ca:	91 87       	std	Z+9, r25	; 0x09
     1cc:	32 87       	std	Z+10, r19	; 0x0a
     1ce:	23 87       	std	Z+11, r18	; 0x0b
     1d0:	94 87       	std	Z+12, r25	; 0x0c
     1d2:	45 87       	std	Z+13, r20	; 0x0d
     1d4:	86 87       	std	Z+14, r24	; 0x0e
     1d6:	87 87       	std	Z+15, r24	; 0x0f
     1d8:	10 8a       	std	Z+16, r1	; 0x10
     1da:	cf 01       	movw	r24, r30
     1dc:	08 95       	ret

000001de <cmdInit>:
     1de:	fc 01       	movw	r30, r24
     1e0:	10 82       	st	Z, r1
     1e2:	11 82       	std	Z+1, r1	; 0x01
     1e4:	12 82       	std	Z+2, r1	; 0x02
     1e6:	13 82       	std	Z+3, r1	; 0x03
     1e8:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <MasterFrameCRC>
     1ec:	15 82       	std	Z+5, r1	; 0x05
     1ee:	14 82       	std	Z+4, r1	; 0x04
     1f0:	08 95       	ret

000001f2 <cmdParse>:
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	fc 01       	movw	r30, r24
     1f8:	eb 01       	movw	r28, r22
     1fa:	82 81       	ldd	r24, Z+2	; 0x02
     1fc:	85 50       	subi	r24, 0x05	; 5
     1fe:	88 83       	st	Y, r24
     200:	93 81       	ldd	r25, Z+3	; 0x03
     202:	99 83       	std	Y+1, r25	; 0x01
     204:	94 81       	ldd	r25, Z+4	; 0x04
     206:	9a 83       	std	Y+2, r25	; 0x02
     208:	95 81       	ldd	r25, Z+5	; 0x05
     20a:	9b 83       	std	Y+3, r25	; 0x03
     20c:	76 81       	ldd	r23, Z+6	; 0x06
     20e:	70 93 51 01 	sts	0x0151, r23	; 0x800151 <MasterFrameCRC>
     212:	88 23       	and	r24, r24
     214:	29 f0       	breq	.+10     	; 0x220 <cmdParse+0x2e>
     216:	cf 01       	movw	r24, r30
     218:	07 96       	adiw	r24, 0x07	; 7
     21a:	9d 83       	std	Y+5, r25	; 0x05
     21c:	8c 83       	std	Y+4, r24	; 0x04
     21e:	02 c0       	rjmp	.+4      	; 0x224 <cmdParse+0x32>
     220:	1d 82       	std	Y+5, r1	; 0x05
     222:	1c 82       	std	Y+4, r1	; 0x04
     224:	16 82       	std	Z+6, r1	; 0x06
     226:	df 01       	movw	r26, r30
     228:	12 96       	adiw	r26, 0x02	; 2
     22a:	37 96       	adiw	r30, 0x07	; 7
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	27 e0       	ldi	r18, 0x07	; 7
     230:	9d 91       	ld	r25, X+
     232:	93 27       	eor	r25, r19
     234:	88 e0       	ldi	r24, 0x08	; 8
     236:	99 23       	and	r25, r25
     238:	24 f4       	brge	.+8      	; 0x242 <cmdParse+0x50>
     23a:	99 0f       	add	r25, r25
     23c:	39 2f       	mov	r19, r25
     23e:	32 27       	eor	r19, r18
     240:	02 c0       	rjmp	.+4      	; 0x246 <cmdParse+0x54>
     242:	39 2f       	mov	r19, r25
     244:	33 0f       	add	r19, r19
     246:	81 50       	subi	r24, 0x01	; 1
     248:	93 2f       	mov	r25, r19
     24a:	a9 f7       	brne	.-22     	; 0x236 <cmdParse+0x44>
     24c:	ae 17       	cp	r26, r30
     24e:	bf 07       	cpc	r27, r31
     250:	79 f7       	brne	.-34     	; 0x230 <cmdParse+0x3e>
     252:	30 93 50 01 	sts	0x0150, r19	; 0x800150 <data.2187>
     256:	68 81       	ld	r22, Y
     258:	66 23       	and	r22, r22
     25a:	b1 f0       	breq	.+44     	; 0x288 <cmdParse+0x96>
     25c:	40 e0       	ldi	r20, 0x00	; 0
     25e:	57 e0       	ldi	r21, 0x07	; 7
     260:	21 91       	ld	r18, Z+
     262:	92 2f       	mov	r25, r18
     264:	93 27       	eor	r25, r19
     266:	28 e0       	ldi	r18, 0x08	; 8
     268:	99 23       	and	r25, r25
     26a:	24 f4       	brge	.+8      	; 0x274 <cmdParse+0x82>
     26c:	99 0f       	add	r25, r25
     26e:	39 2f       	mov	r19, r25
     270:	35 27       	eor	r19, r21
     272:	02 c0       	rjmp	.+4      	; 0x278 <cmdParse+0x86>
     274:	39 2f       	mov	r19, r25
     276:	33 0f       	add	r19, r19
     278:	21 50       	subi	r18, 0x01	; 1
     27a:	93 2f       	mov	r25, r19
     27c:	a9 f7       	brne	.-22     	; 0x268 <cmdParse+0x76>
     27e:	4f 5f       	subi	r20, 0xFF	; 255
     280:	46 17       	cp	r20, r22
     282:	70 f3       	brcs	.-36     	; 0x260 <cmdParse+0x6e>
     284:	30 93 50 01 	sts	0x0150, r19	; 0x800150 <data.2187>
     288:	73 13       	cpse	r23, r19
     28a:	82 e0       	ldi	r24, 0x02	; 2
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	08 95       	ret

00000292 <cmdBuildHeader>:
     292:	cf 93       	push	r28
     294:	df 93       	push	r29
     296:	dc 01       	movw	r26, r24
     298:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <Frame+0x4>
     29c:	14 96       	adiw	r26, 0x04	; 4
     29e:	dc 91       	ld	r29, X
     2a0:	14 97       	sbiw	r26, 0x04	; 4
     2a2:	15 96       	adiw	r26, 0x05	; 5
     2a4:	cc 91       	ld	r28, X
     2a6:	15 97       	sbiw	r26, 0x05	; 5
     2a8:	8c 91       	ld	r24, X
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	05 96       	adiw	r24, 0x05	; 5
     2ae:	8f 3f       	cpi	r24, 0xFF	; 255
     2b0:	91 05       	cpc	r25, r1
     2b2:	18 f0       	brcs	.+6      	; 0x2ba <cmdBuildHeader+0x28>
     2b4:	21 e0       	ldi	r18, 0x01	; 1
     2b6:	20 93 4f 01 	sts	0x014F, r18	; 0x80014f <HeaderInfo.2226+0x2>
     2ba:	e2 e5       	ldi	r30, 0x52	; 82
     2bc:	f1 e0       	ldi	r31, 0x01	; 1
     2be:	80 83       	st	Z, r24
     2c0:	11 96       	adiw	r26, 0x01	; 1
     2c2:	8c 91       	ld	r24, X
     2c4:	11 97       	sbiw	r26, 0x01	; 1
     2c6:	81 83       	std	Z+1, r24	; 0x01
     2c8:	12 96       	adiw	r26, 0x02	; 2
     2ca:	8c 91       	ld	r24, X
     2cc:	12 97       	sbiw	r26, 0x02	; 2
     2ce:	82 83       	std	Z+2, r24	; 0x02
     2d0:	13 96       	adiw	r26, 0x03	; 3
     2d2:	8c 91       	ld	r24, X
     2d4:	13 97       	sbiw	r26, 0x03	; 3
     2d6:	83 83       	std	Z+3, r24	; 0x03
     2d8:	67 e5       	ldi	r22, 0x57	; 87
     2da:	71 e0       	ldi	r23, 0x01	; 1
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	47 e0       	ldi	r20, 0x07	; 7
     2e0:	21 91       	ld	r18, Z+
     2e2:	29 27       	eor	r18, r25
     2e4:	38 e0       	ldi	r19, 0x08	; 8
     2e6:	22 23       	and	r18, r18
     2e8:	24 f4       	brge	.+8      	; 0x2f2 <cmdBuildHeader+0x60>
     2ea:	92 2f       	mov	r25, r18
     2ec:	99 0f       	add	r25, r25
     2ee:	94 27       	eor	r25, r20
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <cmdBuildHeader+0x64>
     2f2:	92 2f       	mov	r25, r18
     2f4:	99 0f       	add	r25, r25
     2f6:	31 50       	subi	r19, 0x01	; 1
     2f8:	29 2f       	mov	r18, r25
     2fa:	a9 f7       	brne	.-22     	; 0x2e6 <cmdBuildHeader+0x54>
     2fc:	e6 17       	cp	r30, r22
     2fe:	f7 07       	cpc	r31, r23
     300:	79 f7       	brne	.-34     	; 0x2e0 <cmdBuildHeader+0x4e>
     302:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <data.2187>
     306:	5c 91       	ld	r21, X
     308:	55 23       	and	r21, r21
     30a:	c1 f0       	breq	.+48     	; 0x33c <cmdBuildHeader+0xaa>
     30c:	ed 2f       	mov	r30, r29
     30e:	fc 2f       	mov	r31, r28
     310:	40 e0       	ldi	r20, 0x00	; 0
     312:	87 e0       	ldi	r24, 0x07	; 7
     314:	21 91       	ld	r18, Z+
     316:	29 27       	eor	r18, r25
     318:	38 e0       	ldi	r19, 0x08	; 8
     31a:	22 23       	and	r18, r18
     31c:	24 f4       	brge	.+8      	; 0x326 <cmdBuildHeader+0x94>
     31e:	92 2f       	mov	r25, r18
     320:	99 0f       	add	r25, r25
     322:	98 27       	eor	r25, r24
     324:	02 c0       	rjmp	.+4      	; 0x32a <cmdBuildHeader+0x98>
     326:	92 2f       	mov	r25, r18
     328:	99 0f       	add	r25, r25
     32a:	31 50       	subi	r19, 0x01	; 1
     32c:	29 2f       	mov	r18, r25
     32e:	a9 f7       	brne	.-22     	; 0x31a <cmdBuildHeader+0x88>
     330:	4f 5f       	subi	r20, 0xFF	; 255
     332:	45 17       	cp	r20, r21
     334:	78 f3       	brcs	.-34     	; 0x314 <cmdBuildHeader+0x82>
     336:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <data.2187>
     33a:	07 c0       	rjmp	.+14     	; 0x34a <cmdBuildHeader+0xb8>
     33c:	81 e0       	ldi	r24, 0x01	; 1
     33e:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <HeaderInfo.2226+0x2>
     342:	15 96       	adiw	r26, 0x05	; 5
     344:	1c 92       	st	X, r1
     346:	1e 92       	st	-X, r1
     348:	14 97       	sbiw	r26, 0x04	; 4
     34a:	e2 e5       	ldi	r30, 0x52	; 82
     34c:	f1 e0       	ldi	r31, 0x01	; 1
     34e:	94 83       	std	Z+4, r25	; 0x04
     350:	12 96       	adiw	r26, 0x02	; 2
     352:	1c 92       	st	X, r1
     354:	12 97       	sbiw	r26, 0x02	; 2
     356:	11 96       	adiw	r26, 0x01	; 1
     358:	1c 92       	st	X, r1
     35a:	11 97       	sbiw	r26, 0x01	; 1
     35c:	13 96       	adiw	r26, 0x03	; 3
     35e:	1c 92       	st	X, r1
     360:	f0 93 4e 01 	sts	0x014E, r31	; 0x80014e <HeaderInfo.2226+0x1>
     364:	e0 93 4d 01 	sts	0x014D, r30	; 0x80014d <HeaderInfo.2226>
     368:	60 91 4d 01 	lds	r22, 0x014D	; 0x80014d <HeaderInfo.2226>
     36c:	70 91 4e 01 	lds	r23, 0x014E	; 0x80014e <HeaderInfo.2226+0x1>
     370:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <HeaderInfo.2226+0x2>
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <cmdBuildAnswer>:
     37a:	ef 92       	push	r14
     37c:	ff 92       	push	r15
     37e:	0f 93       	push	r16
     380:	fc 01       	movw	r30, r24
     382:	62 83       	std	Z+2, r22	; 0x02
     384:	41 83       	std	Z+1, r20	; 0x01
     386:	23 83       	std	Z+3, r18	; 0x03
     388:	f5 82       	std	Z+5, r15	; 0x05
     38a:	e4 82       	std	Z+4, r14	; 0x04
     38c:	00 83       	st	Z, r16
     38e:	0f 91       	pop	r16
     390:	ff 90       	pop	r15
     392:	ef 90       	pop	r14
     394:	08 95       	ret

00000396 <cmdSendAnswer>:
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
     39a:	ec 01       	movw	r28, r24
     39c:	0e 94 49 01 	call	0x292	; 0x292 <cmdBuildHeader>
     3a0:	a8 2f       	mov	r26, r24
     3a2:	cb 01       	movw	r24, r22
     3a4:	65 e0       	ldi	r22, 0x05	; 5
     3a6:	0e 94 12 05 	call	0xa24	; 0xa24 <uartPutByteStr>
     3aa:	68 81       	ld	r22, Y
     3ac:	8c 81       	ldd	r24, Y+4	; 0x04
     3ae:	9d 81       	ldd	r25, Y+5	; 0x05
     3b0:	0e 94 12 05 	call	0xa24	; 0xa24 <uartPutByteStr>
     3b4:	df 91       	pop	r29
     3b6:	cf 91       	pop	r28
     3b8:	08 95       	ret

000003ba <selectFont>:
     3ba:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <__data_start+0x6>
     3be:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__data_start+0x5>
     3c2:	08 95       	ret

000003c4 <getCharMapIndex>:
     3c4:	28 2f       	mov	r18, r24
     3c6:	a0 91 65 00 	lds	r26, 0x0065	; 0x800065 <__data_start+0x5>
     3ca:	b0 91 66 00 	lds	r27, 0x0066	; 0x800066 <__data_start+0x6>
     3ce:	8c 91       	ld	r24, X
     3d0:	28 17       	cp	r18, r24
     3d2:	81 f0       	breq	.+32     	; 0x3f4 <getCharMapIndex+0x30>
     3d4:	88 23       	and	r24, r24
     3d6:	81 f0       	breq	.+32     	; 0x3f8 <getCharMapIndex+0x34>
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	8f 5f       	subi	r24, 0xFF	; 255
     3dc:	e8 2f       	mov	r30, r24
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	ee 0f       	add	r30, r30
     3e2:	ff 1f       	adc	r31, r31
     3e4:	ea 0f       	add	r30, r26
     3e6:	fb 1f       	adc	r31, r27
     3e8:	90 81       	ld	r25, Z
     3ea:	92 17       	cp	r25, r18
     3ec:	31 f0       	breq	.+12     	; 0x3fa <getCharMapIndex+0x36>
     3ee:	91 11       	cpse	r25, r1
     3f0:	f4 cf       	rjmp	.-24     	; 0x3da <getCharMapIndex+0x16>
     3f2:	08 95       	ret
     3f4:	80 e0       	ldi	r24, 0x00	; 0
     3f6:	08 95       	ret
     3f8:	80 e0       	ldi	r24, 0x00	; 0
     3fa:	08 95       	ret

000003fc <timeBcdToStr>:
     3fc:	8b 37       	cpi	r24, 0x7B	; 123
     3fe:	31 f4       	brne	.+12     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     400:	e8 e5       	ldi	r30, 0x58	; 88
     402:	f1 e0       	ldi	r31, 0x01	; 1
     404:	80 e2       	ldi	r24, 0x20	; 32
     406:	80 83       	st	Z, r24
     408:	81 83       	std	Z+1, r24	; 0x01
     40a:	0a c0       	rjmp	.+20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     40c:	e8 e5       	ldi	r30, 0x58	; 88
     40e:	f1 e0       	ldi	r31, 0x01	; 1
     410:	98 2f       	mov	r25, r24
     412:	92 95       	swap	r25
     414:	9f 70       	andi	r25, 0x0F	; 15
     416:	90 5d       	subi	r25, 0xD0	; 208
     418:	90 83       	st	Z, r25
     41a:	8f 70       	andi	r24, 0x0F	; 15
     41c:	80 5d       	subi	r24, 0xD0	; 208
     41e:	81 83       	std	Z+1, r24	; 0x01
     420:	e8 e5       	ldi	r30, 0x58	; 88
     422:	f1 e0       	ldi	r31, 0x01	; 1
     424:	8e e2       	ldi	r24, 0x2E	; 46
     426:	82 83       	std	Z+2, r24	; 0x02
     428:	80 e2       	ldi	r24, 0x20	; 32
     42a:	83 83       	std	Z+3, r24	; 0x03
     42c:	6b 37       	cpi	r22, 0x7B	; 123
     42e:	19 f4       	brne	.+6      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     430:	84 83       	std	Z+4, r24	; 0x04
     432:	85 83       	std	Z+5, r24	; 0x05
     434:	0a c0       	rjmp	.+20     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     436:	e8 e5       	ldi	r30, 0x58	; 88
     438:	f1 e0       	ldi	r31, 0x01	; 1
     43a:	86 2f       	mov	r24, r22
     43c:	82 95       	swap	r24
     43e:	8f 70       	andi	r24, 0x0F	; 15
     440:	80 5d       	subi	r24, 0xD0	; 208
     442:	84 83       	std	Z+4, r24	; 0x04
     444:	6f 70       	andi	r22, 0x0F	; 15
     446:	60 5d       	subi	r22, 0xD0	; 208
     448:	65 83       	std	Z+5, r22	; 0x05
     44a:	e8 e5       	ldi	r30, 0x58	; 88
     44c:	f1 e0       	ldi	r31, 0x01	; 1
     44e:	8e e2       	ldi	r24, 0x2E	; 46
     450:	86 83       	std	Z+6, r24	; 0x06
     452:	80 e2       	ldi	r24, 0x20	; 32
     454:	87 83       	std	Z+7, r24	; 0x07
     456:	4b 37       	cpi	r20, 0x7B	; 123
     458:	19 f4       	brne	.+6      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     45a:	80 87       	std	Z+8, r24	; 0x08
     45c:	81 87       	std	Z+9, r24	; 0x09
     45e:	0a c0       	rjmp	.+20     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     460:	e8 e5       	ldi	r30, 0x58	; 88
     462:	f1 e0       	ldi	r31, 0x01	; 1
     464:	84 2f       	mov	r24, r20
     466:	82 95       	swap	r24
     468:	8f 70       	andi	r24, 0x0F	; 15
     46a:	80 5d       	subi	r24, 0xD0	; 208
     46c:	80 87       	std	Z+8, r24	; 0x08
     46e:	4f 70       	andi	r20, 0x0F	; 15
     470:	40 5d       	subi	r20, 0xD0	; 208
     472:	41 87       	std	Z+9, r20	; 0x09
     474:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <str+0xa>
     478:	88 e5       	ldi	r24, 0x58	; 88
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	08 95       	ret

0000047e <buildTemperatureString>:
     47e:	fc 01       	movw	r30, r24
     480:	66 23       	and	r22, r22
     482:	cc f4       	brge	.+50     	; 0x4b6 <buildTemperatureString+0x38>
     484:	61 95       	neg	r22
     486:	44 23       	and	r20, r20
     488:	29 f0       	breq	.+10     	; 0x494 <buildTemperatureString+0x16>
     48a:	41 30       	cpi	r20, 0x01	; 1
     48c:	49 f0       	breq	.+18     	; 0x4a0 <buildTemperatureString+0x22>
     48e:	80 e2       	ldi	r24, 0x20	; 32
     490:	80 83       	st	Z, r24
     492:	16 c0       	rjmp	.+44     	; 0x4c0 <buildTemperatureString+0x42>
     494:	8d e2       	ldi	r24, 0x2D	; 45
     496:	80 83       	st	Z, r24
     498:	13 c0       	rjmp	.+38     	; 0x4c0 <buildTemperatureString+0x42>
     49a:	80 e6       	ldi	r24, 0x60	; 96
     49c:	80 83       	st	Z, r24
     49e:	10 c0       	rjmp	.+32     	; 0x4c0 <buildTemperatureString+0x42>
     4a0:	8a e5       	ldi	r24, 0x5A	; 90
     4a2:	01 c0       	rjmp	.+2      	; 0x4a6 <buildTemperatureString+0x28>
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	8a 35       	cpi	r24, 0x5A	; 90
     4a8:	19 f4       	brne	.+6      	; 0x4b0 <buildTemperatureString+0x32>
     4aa:	8d e2       	ldi	r24, 0x2D	; 45
     4ac:	80 83       	st	Z, r24
     4ae:	08 c0       	rjmp	.+16     	; 0x4c0 <buildTemperatureString+0x42>
     4b0:	84 eb       	ldi	r24, 0xB4	; 180
     4b2:	80 83       	st	Z, r24
     4b4:	05 c0       	rjmp	.+10     	; 0x4c0 <buildTemperatureString+0x42>
     4b6:	44 23       	and	r20, r20
     4b8:	81 f3       	breq	.-32     	; 0x49a <buildTemperatureString+0x1c>
     4ba:	41 30       	cpi	r20, 0x01	; 1
     4bc:	99 f3       	breq	.-26     	; 0x4a4 <buildTemperatureString+0x26>
     4be:	e7 cf       	rjmp	.-50     	; 0x48e <buildTemperatureString+0x10>
     4c0:	97 e6       	ldi	r25, 0x67	; 103
     4c2:	69 02       	muls	r22, r25
     4c4:	91 2d       	mov	r25, r1
     4c6:	11 24       	eor	r1, r1
     4c8:	95 95       	asr	r25
     4ca:	95 95       	asr	r25
     4cc:	67 fd       	sbrc	r22, 7
     4ce:	93 95       	inc	r25
     4d0:	80 e3       	ldi	r24, 0x30	; 48
     4d2:	89 0f       	add	r24, r25
     4d4:	81 83       	std	Z+1, r24	; 0x01
     4d6:	99 0f       	add	r25, r25
     4d8:	89 2f       	mov	r24, r25
     4da:	88 0f       	add	r24, r24
     4dc:	88 0f       	add	r24, r24
     4de:	98 0f       	add	r25, r24
     4e0:	69 1b       	sub	r22, r25
     4e2:	60 5d       	subi	r22, 0xD0	; 208
     4e4:	62 83       	std	Z+2, r22	; 0x02
     4e6:	80 eb       	ldi	r24, 0xB0	; 176
     4e8:	83 83       	std	Z+3, r24	; 0x03
     4ea:	83 e4       	ldi	r24, 0x43	; 67
     4ec:	84 83       	std	Z+4, r24	; 0x04
     4ee:	15 82       	std	Z+5, r1	; 0x05
     4f0:	cf 01       	movw	r24, r30
     4f2:	08 95       	ret

000004f4 <chToRam>:
     4f4:	0f 93       	push	r16
     4f6:	1f 93       	push	r17
     4f8:	cf 93       	push	r28
     4fa:	c6 2f       	mov	r28, r22
     4fc:	00 91 65 00 	lds	r16, 0x0065	; 0x800065 <__data_start+0x5>
     500:	10 91 66 00 	lds	r17, 0x0066	; 0x800066 <__data_start+0x6>
     504:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <getCharMapIndex>
     508:	e8 2f       	mov	r30, r24
     50a:	f0 e0       	ldi	r31, 0x00	; 0
     50c:	ee 0f       	add	r30, r30
     50e:	ff 1f       	adc	r31, r31
     510:	e0 0f       	add	r30, r16
     512:	f1 1f       	adc	r31, r17
     514:	81 81       	ldd	r24, Z+1	; 0x01
     516:	80 95       	com	r24
     518:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <mcp23017_set_gpa>
     51c:	8c 2f       	mov	r24, r28
     51e:	80 95       	com	r24
     520:	8f 77       	andi	r24, 0x7F	; 127
     522:	0e 94 ff 02 	call	0x5fe	; 0x5fe <mcp23017_set_gpb>
     526:	cf 91       	pop	r28
     528:	1f 91       	pop	r17
     52a:	0f 91       	pop	r16
     52c:	08 95       	ret

0000052e <muxDigits>:
     52e:	e0 91 57 01 	lds	r30, 0x0157	; 0x800157 <mux.2034>
     532:	e3 32       	cpi	r30, 0x23	; 35
     534:	18 f0       	brcs	.+6      	; 0x53c <muxDigits+0xe>
     536:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <mux.2034>
     53a:	0d c0       	rjmp	.+26     	; 0x556 <muxDigits+0x28>
     53c:	ef 5f       	subi	r30, 0xFF	; 255
     53e:	e0 93 57 01 	sts	0x0157, r30	; 0x800157 <mux.2034>
     542:	8e 2f       	mov	r24, r30
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	84 32       	cpi	r24, 0x24	; 36
     548:	91 05       	cpc	r25, r1
     54a:	80 f5       	brcc	.+96     	; 0x5ac <muxDigits+0x7e>
     54c:	fc 01       	movw	r30, r24
     54e:	e6 5d       	subi	r30, 0xD6	; 214
     550:	ff 4f       	sbci	r31, 0xFF	; 255
     552:	0c 94 e4 0c 	jmp	0x19c8	; 0x19c8 <__tablejump2__>
     556:	60 e4       	ldi	r22, 0x40	; 64
     558:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
     55c:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     560:	08 95       	ret
     562:	67 e8       	ldi	r22, 0x87	; 135
     564:	80 e2       	ldi	r24, 0x20	; 32
     566:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     56a:	08 95       	ret
     56c:	60 e2       	ldi	r22, 0x20	; 32
     56e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__data_start+0x1>
     572:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     576:	08 95       	ret
     578:	67 e8       	ldi	r22, 0x87	; 135
     57a:	80 e2       	ldi	r24, 0x20	; 32
     57c:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     580:	08 95       	ret
     582:	60 e1       	ldi	r22, 0x10	; 16
     584:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_start+0x2>
     588:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     58c:	08 95       	ret
     58e:	67 e8       	ldi	r22, 0x87	; 135
     590:	80 e2       	ldi	r24, 0x20	; 32
     592:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     596:	08 95       	ret
     598:	68 e0       	ldi	r22, 0x08	; 8
     59a:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__data_start+0x3>
     59e:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     5a2:	08 95       	ret
     5a4:	67 e8       	ldi	r22, 0x87	; 135
     5a6:	80 e2       	ldi	r24, 0x20	; 32
     5a8:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <chToRam>
     5ac:	08 95       	ret

000005ae <hardware_init>:
     5ae:	8a b3       	in	r24, 0x1a	; 26
     5b0:	88 6f       	ori	r24, 0xF8	; 248
     5b2:	8a bb       	out	0x1a, r24	; 26
     5b4:	84 b3       	in	r24, 0x14	; 20
     5b6:	80 6e       	ori	r24, 0xE0	; 224
     5b8:	84 bb       	out	0x14, r24	; 20
     5ba:	bf 9a       	sbi	0x17, 7	; 23
     5bc:	be 9a       	sbi	0x17, 6	; 23
     5be:	a4 9a       	sbi	0x14, 4	; 20
     5c0:	81 b3       	in	r24, 0x11	; 17
     5c2:	8c 6f       	ori	r24, 0xFC	; 252
     5c4:	81 bb       	out	0x11, r24	; 17
     5c6:	84 b3       	in	r24, 0x14	; 20
     5c8:	8c 60       	ori	r24, 0x0C	; 12
     5ca:	84 bb       	out	0x14, r24	; 20
     5cc:	a4 9a       	sbi	0x14, 4	; 20
     5ce:	87 b3       	in	r24, 0x17	; 23
     5d0:	80 7f       	andi	r24, 0xF0	; 240
     5d2:	87 bb       	out	0x17, r24	; 23
     5d4:	d0 98       	cbi	0x1a, 0	; 26
     5d6:	ac 98       	cbi	0x15, 4	; 21
     5d8:	8a b3       	in	r24, 0x1a	; 26
     5da:	89 7f       	andi	r24, 0xF9	; 249
     5dc:	8a bb       	out	0x1a, r24	; 26
     5de:	08 95       	ret

000005e0 <mcp23017_set_gpa>:
     5e0:	cf 93       	push	r28
     5e2:	c8 2f       	mov	r28, r24
     5e4:	80 e4       	ldi	r24, 0x40	; 64
     5e6:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     5ea:	82 e1       	ldi	r24, 0x12	; 18
     5ec:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     5f0:	8c 2f       	mov	r24, r28
     5f2:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     5f6:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     5fa:	cf 91       	pop	r28
     5fc:	08 95       	ret

000005fe <mcp23017_set_gpb>:
     5fe:	cf 93       	push	r28
     600:	c8 2f       	mov	r28, r24
     602:	80 e4       	ldi	r24, 0x40	; 64
     604:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     608:	83 e1       	ldi	r24, 0x13	; 19
     60a:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     60e:	8c 2f       	mov	r24, r28
     610:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     614:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     618:	cf 91       	pop	r28
     61a:	08 95       	ret

0000061c <mcp23017_init>:
     61c:	80 e4       	ldi	r24, 0x40	; 64
     61e:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     622:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <cmd>
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     62c:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <cmd>
     630:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     63a:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <cmd>
     63e:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     642:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <mcp23017_set_gpa>
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <mcp23017_set_gpb>
     652:	08 95       	ret

00000654 <rtcBcdToDec>:
     654:	98 2f       	mov	r25, r24
     656:	92 95       	swap	r25
     658:	9f 70       	andi	r25, 0x0F	; 15
     65a:	99 0f       	add	r25, r25
     65c:	29 2f       	mov	r18, r25
     65e:	22 0f       	add	r18, r18
     660:	22 0f       	add	r18, r18
     662:	92 0f       	add	r25, r18
     664:	8f 70       	andi	r24, 0x0F	; 15
     666:	89 0f       	add	r24, r25
     668:	08 95       	ret

0000066a <rtcDecToBcd>:
     66a:	9d ec       	ldi	r25, 0xCD	; 205
     66c:	89 9f       	mul	r24, r25
     66e:	91 2d       	mov	r25, r1
     670:	11 24       	eor	r1, r1
     672:	96 95       	lsr	r25
     674:	96 95       	lsr	r25
     676:	96 95       	lsr	r25
     678:	20 e1       	ldi	r18, 0x10	; 16
     67a:	92 9f       	mul	r25, r18
     67c:	a0 01       	movw	r20, r0
     67e:	11 24       	eor	r1, r1
     680:	99 0f       	add	r25, r25
     682:	29 2f       	mov	r18, r25
     684:	22 0f       	add	r18, r18
     686:	22 0f       	add	r18, r18
     688:	92 0f       	add	r25, r18
     68a:	89 1b       	sub	r24, r25
     68c:	84 2b       	or	r24, r20
     68e:	08 95       	ret

00000690 <rtcSetTime>:
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	18 2f       	mov	r17, r24
     69a:	06 2f       	mov	r16, r22
     69c:	84 2f       	mov	r24, r20
     69e:	c4 e6       	ldi	r28, 0x64	; 100
     6a0:	d1 e0       	ldi	r29, 0x01	; 1
     6a2:	92 e0       	ldi	r25, 0x02	; 2
     6a4:	98 83       	st	Y, r25
     6a6:	0e 94 35 03 	call	0x66a	; 0x66a <rtcDecToBcd>
     6aa:	89 83       	std	Y+1, r24	; 0x01
     6ac:	80 2f       	mov	r24, r16
     6ae:	0e 94 35 03 	call	0x66a	; 0x66a <rtcDecToBcd>
     6b2:	8a 83       	std	Y+2, r24	; 0x02
     6b4:	81 2f       	mov	r24, r17
     6b6:	0e 94 35 03 	call	0x66a	; 0x66a <rtcDecToBcd>
     6ba:	8b 83       	std	Y+3, r24	; 0x03
     6bc:	82 ea       	ldi	r24, 0xA2	; 162
     6be:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     6c2:	0f e6       	ldi	r16, 0x6F	; 111
     6c4:	11 e0       	ldi	r17, 0x01	; 1
     6c6:	89 91       	ld	r24, Y+
     6c8:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     6cc:	c0 17       	cp	r28, r16
     6ce:	d1 07       	cpc	r29, r17
     6d0:	d1 f7       	brne	.-12     	; 0x6c6 <rtcSetTime+0x36>
     6d2:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     6d6:	df 91       	pop	r29
     6d8:	cf 91       	pop	r28
     6da:	1f 91       	pop	r17
     6dc:	0f 91       	pop	r16
     6de:	08 95       	ret

000006e0 <rtcGetData>:
     6e0:	ef 92       	push	r14
     6e2:	ff 92       	push	r15
     6e4:	0f 93       	push	r16
     6e6:	1f 93       	push	r17
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	8c 01       	movw	r16, r24
     6ee:	c4 e6       	ldi	r28, 0x64	; 100
     6f0:	d1 e0       	ldi	r29, 0x01	; 1
     6f2:	82 e0       	ldi	r24, 0x02	; 2
     6f4:	88 83       	st	Y, r24
     6f6:	82 ea       	ldi	r24, 0xA2	; 162
     6f8:	0e 94 7a 00 	call	0xf4	; 0xf4 <i2c_start>
     6fc:	88 81       	ld	r24, Y
     6fe:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     702:	83 ea       	ldi	r24, 0xA3	; 163
     704:	0e 94 7e 00 	call	0xfc	; 0xfc <i2c_rep_start>
     708:	88 23       	and	r24, r24
     70a:	19 f0       	breq	.+6      	; 0x712 <rtcGetData+0x32>
     70c:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     710:	14 c0       	rjmp	.+40     	; 0x73a <rtcGetData+0x5a>
     712:	c4 e6       	ldi	r28, 0x64	; 100
     714:	d1 e0       	ldi	r29, 0x01	; 1
     716:	0f 2e       	mov	r0, r31
     718:	ff e6       	ldi	r31, 0x6F	; 111
     71a:	ef 2e       	mov	r14, r31
     71c:	f1 e0       	ldi	r31, 0x01	; 1
     71e:	ff 2e       	mov	r15, r31
     720:	f0 2d       	mov	r31, r0
     722:	0e 94 b8 00 	call	0x170	; 0x170 <i2c_readAck>
     726:	89 93       	st	Y+, r24
     728:	ce 15       	cp	r28, r14
     72a:	df 05       	cpc	r29, r15
     72c:	d1 f7       	brne	.-12     	; 0x722 <rtcGetData+0x42>
     72e:	0e 94 b6 00 	call	0x16c	; 0x16c <i2c_readNak>
     732:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <data.1681>
     736:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     73a:	e4 e6       	ldi	r30, 0x64	; 100
     73c:	f1 e0       	ldi	r31, 0x01	; 1
     73e:	a0 81       	ld	r26, Z
     740:	e8 01       	movw	r28, r16
     742:	a8 83       	st	Y, r26
     744:	71 81       	ldd	r23, Z+1	; 0x01
     746:	79 83       	std	Y+1, r23	; 0x01
     748:	62 81       	ldd	r22, Z+2	; 0x02
     74a:	6a 83       	std	Y+2, r22	; 0x02
     74c:	53 81       	ldd	r21, Z+3	; 0x03
     74e:	5c 83       	std	Y+4, r21	; 0x04
     750:	34 81       	ldd	r19, Z+4	; 0x04
     752:	3d 83       	std	Y+5, r19	; 0x05
     754:	45 81       	ldd	r20, Z+5	; 0x05
     756:	4b 83       	std	Y+3, r20	; 0x03
     758:	86 81       	ldd	r24, Z+6	; 0x06
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	9f 83       	std	Y+7, r25	; 0x07
     75e:	8e 83       	std	Y+6, r24	; 0x06
     760:	27 81       	ldd	r18, Z+7	; 0x07
     762:	28 87       	std	Y+8, r18	; 0x08
     764:	90 85       	ldd	r25, Z+8	; 0x08
     766:	99 87       	std	Y+9, r25	; 0x09
     768:	81 85       	ldd	r24, Z+9	; 0x09
     76a:	8a 87       	std	Y+10, r24	; 0x0a
     76c:	e2 85       	ldd	r30, Z+10	; 0x0a
     76e:	af 77       	andi	r26, 0x7F	; 127
     770:	a8 83       	st	Y, r26
     772:	7f 77       	andi	r23, 0x7F	; 127
     774:	79 83       	std	Y+1, r23	; 0x01
     776:	6f 73       	andi	r22, 0x3F	; 63
     778:	6a 83       	std	Y+2, r22	; 0x02
     77a:	5f 73       	andi	r21, 0x3F	; 63
     77c:	5c 83       	std	Y+4, r21	; 0x04
     77e:	4f 71       	andi	r20, 0x1F	; 31
     780:	4b 83       	std	Y+3, r20	; 0x03
     782:	37 70       	andi	r19, 0x07	; 7
     784:	3d 83       	std	Y+5, r19	; 0x05
     786:	2f 77       	andi	r18, 0x7F	; 127
     788:	28 87       	std	Y+8, r18	; 0x08
     78a:	9f 77       	andi	r25, 0x7F	; 127
     78c:	99 87       	std	Y+9, r25	; 0x09
     78e:	8f 77       	andi	r24, 0x7F	; 127
     790:	8a 87       	std	Y+10, r24	; 0x0a
     792:	8e 2f       	mov	r24, r30
     794:	8f 77       	andi	r24, 0x7F	; 127
     796:	8b 87       	std	Y+11, r24	; 0x0b
     798:	df 91       	pop	r29
     79a:	cf 91       	pop	r28
     79c:	1f 91       	pop	r17
     79e:	0f 91       	pop	r16
     7a0:	ff 90       	pop	r15
     7a2:	ef 90       	pop	r14
     7a4:	08 95       	ret

000007a6 <sts3xCalc>:
     7a6:	bc 01       	movw	r22, r24
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <__floatunsisf>
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	4f e2       	ldi	r20, 0x2F	; 47
     7b6:	53 e4       	ldi	r21, 0x43	; 67
     7b8:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     7bc:	20 e0       	ldi	r18, 0x00	; 0
     7be:	3f ef       	ldi	r19, 0xFF	; 255
     7c0:	4f e7       	ldi	r20, 0x7F	; 127
     7c2:	57 e4       	ldi	r21, 0x47	; 71
     7c4:	0e 94 41 0b 	call	0x1682	; 0x1682 <__divsf3>
     7c8:	20 e0       	ldi	r18, 0x00	; 0
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	44 e3       	ldi	r20, 0x34	; 52
     7ce:	52 e4       	ldi	r21, 0x42	; 66
     7d0:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <__subsf3>
     7d4:	0e 94 b3 0b 	call	0x1766	; 0x1766 <__fixsfsi>
     7d8:	cb 01       	movw	r24, r22
     7da:	08 95       	ret

000007dc <sts3xRead>:
     7dc:	cf 93       	push	r28
     7de:	df 93       	push	r29
     7e0:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <sts3x>
     7e4:	85 e9       	ldi	r24, 0x95	; 149
     7e6:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     7ea:	0e 94 b8 00 	call	0x170	; 0x170 <i2c_readAck>
     7ee:	c0 e7       	ldi	r28, 0x70	; 112
     7f0:	d1 e0       	ldi	r29, 0x01	; 1
     7f2:	88 83       	st	Y, r24
     7f4:	0e 94 b8 00 	call	0x170	; 0x170 <i2c_readAck>
     7f8:	89 83       	std	Y+1, r24	; 0x01
     7fa:	0e 94 b6 00 	call	0x16c	; 0x16c <i2c_readNak>
     7fe:	8a 83       	std	Y+2, r24	; 0x02
     800:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     804:	88 81       	ld	r24, Y
     806:	80 95       	com	r24
     808:	98 e0       	ldi	r25, 0x08	; 8
     80a:	21 e3       	ldi	r18, 0x31	; 49
     80c:	88 23       	and	r24, r24
     80e:	1c f4       	brge	.+6      	; 0x816 <sts3xRead+0x3a>
     810:	88 0f       	add	r24, r24
     812:	82 27       	eor	r24, r18
     814:	01 c0       	rjmp	.+2      	; 0x818 <sts3xRead+0x3c>
     816:	88 0f       	add	r24, r24
     818:	91 50       	subi	r25, 0x01	; 1
     81a:	c1 f7       	brne	.-16     	; 0x80c <sts3xRead+0x30>
     81c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <read.1695+0x1>
     820:	89 27       	eor	r24, r25
     822:	98 e0       	ldi	r25, 0x08	; 8
     824:	21 e3       	ldi	r18, 0x31	; 49
     826:	88 23       	and	r24, r24
     828:	1c f4       	brge	.+6      	; 0x830 <sts3xRead+0x54>
     82a:	88 0f       	add	r24, r24
     82c:	82 27       	eor	r24, r18
     82e:	01 c0       	rjmp	.+2      	; 0x832 <sts3xRead+0x56>
     830:	88 0f       	add	r24, r24
     832:	91 50       	subi	r25, 0x01	; 1
     834:	c1 f7       	brne	.-16     	; 0x826 <sts3xRead+0x4a>
     836:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <data.1681>
     83a:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <read.1695+0x2>
     83e:	98 13       	cpse	r25, r24
     840:	09 c0       	rjmp	.+18     	; 0x854 <sts3xRead+0x78>
     842:	e0 e7       	ldi	r30, 0x70	; 112
     844:	f1 e0       	ldi	r31, 0x01	; 1
     846:	80 81       	ld	r24, Z
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	98 2f       	mov	r25, r24
     84c:	88 27       	eor	r24, r24
     84e:	21 81       	ldd	r18, Z+1	; 0x01
     850:	82 2b       	or	r24, r18
     852:	07 c0       	rjmp	.+14     	; 0x862 <__stack+0x3>
     854:	e7 e6       	ldi	r30, 0x67	; 103
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	80 81       	ld	r24, Z
     85a:	82 60       	ori	r24, 0x02	; 2
     85c:	80 83       	st	Z, r24
     85e:	84 ea       	ldi	r24, 0xA4	; 164
     860:	96 e0       	ldi	r25, 0x06	; 6
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	08 95       	ret

00000868 <sts3xGetTemp>:
     868:	0e 94 ee 03 	call	0x7dc	; 0x7dc <sts3xRead>
     86c:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <sts3xCalc>
     870:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <sts3x+0x2>
     874:	08 95       	ret

00000876 <sts3xReset>:
     876:	84 e9       	ldi	r24, 0x94	; 148
     878:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     87c:	82 ea       	ldi	r24, 0xA2	; 162
     87e:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     882:	80 e3       	ldi	r24, 0x30	; 48
     884:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     888:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     88c:	08 95       	ret

0000088e <sts3xInit>:
     88e:	0e 94 3b 04 	call	0x876	; 0x876 <sts3xReset>
     892:	84 e9       	ldi	r24, 0x94	; 148
     894:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     898:	87 e2       	ldi	r24, 0x27	; 39
     89a:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     89e:	87 e3       	ldi	r24, 0x37	; 55
     8a0:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     8a4:	80 ee       	ldi	r24, 0xE0	; 224
     8a6:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     8aa:	80 e0       	ldi	r24, 0x00	; 0
     8ac:	0e 94 9a 00 	call	0x134	; 0x134 <i2c_write>
     8b0:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     8b4:	08 95       	ret

000008b6 <tmp102Read>:
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	83 e9       	ldi	r24, 0x93	; 147
     8bc:	0e 94 88 00 	call	0x110	; 0x110 <i2c_start_wait>
     8c0:	0e 94 b8 00 	call	0x170	; 0x170 <i2c_readAck>
     8c4:	d8 2f       	mov	r29, r24
     8c6:	0e 94 b6 00 	call	0x16c	; 0x16c <i2c_readNak>
     8ca:	c8 2f       	mov	r28, r24
     8cc:	0e 94 92 00 	call	0x124	; 0x124 <i2c_stop>
     8d0:	8c 2f       	mov	r24, r28
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	9d 2b       	or	r25, r29
     8d6:	92 95       	swap	r25
     8d8:	82 95       	swap	r24
     8da:	8f 70       	andi	r24, 0x0F	; 15
     8dc:	89 27       	eor	r24, r25
     8de:	9f 70       	andi	r25, 0x0F	; 15
     8e0:	89 27       	eor	r24, r25
     8e2:	df 91       	pop	r29
     8e4:	cf 91       	pop	r28
     8e6:	08 95       	ret

000008e8 <tmp102GetTemp>:
     8e8:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <tmp102Read>
     8ec:	bc 01       	movw	r22, r24
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <__floatunsisf>
     8f6:	20 e0       	ldi	r18, 0x00	; 0
     8f8:	30 e0       	ldi	r19, 0x00	; 0
     8fa:	40 e8       	ldi	r20, 0x80	; 128
     8fc:	5d e3       	ldi	r21, 0x3D	; 61
     8fe:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     902:	0e 94 b3 0b 	call	0x1766	; 0x1766 <__fixsfsi>
     906:	86 2f       	mov	r24, r22
     908:	08 95       	ret

0000090a <__vector_13>:
     90a:	1f 92       	push	r1
     90c:	0f 92       	push	r0
     90e:	0f b6       	in	r0, 0x3f	; 63
     910:	0f 92       	push	r0
     912:	11 24       	eor	r1, r1
     914:	2f 93       	push	r18
     916:	8f 93       	push	r24
     918:	9f 93       	push	r25
     91a:	ef 93       	push	r30
     91c:	ff 93       	push	r31
     91e:	8b b1       	in	r24, 0x0b	; 11
     920:	2c b1       	in	r18, 0x0c	; 12
     922:	88 71       	andi	r24, 0x18	; 24
     924:	e0 91 77 01 	lds	r30, 0x0177	; 0x800177 <UART_RxHead>
     928:	ef 5f       	subi	r30, 0xFF	; 255
     92a:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <UART_RxTail>
     92e:	e9 17       	cp	r30, r25
     930:	39 f0       	breq	.+14     	; 0x940 <__vector_13+0x36>
     932:	e0 93 77 01 	sts	0x0177, r30	; 0x800177 <UART_RxHead>
     936:	f0 e0       	ldi	r31, 0x00	; 0
     938:	e6 58       	subi	r30, 0x86	; 134
     93a:	fe 4f       	sbci	r31, 0xFE	; 254
     93c:	20 83       	st	Z, r18
     93e:	01 c0       	rjmp	.+2      	; 0x942 <__vector_13+0x38>
     940:	82 e0       	ldi	r24, 0x02	; 2
     942:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <UART_LastRxError>
     946:	89 2b       	or	r24, r25
     948:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <UART_LastRxError>
     94c:	ff 91       	pop	r31
     94e:	ef 91       	pop	r30
     950:	9f 91       	pop	r25
     952:	8f 91       	pop	r24
     954:	2f 91       	pop	r18
     956:	0f 90       	pop	r0
     958:	0f be       	out	0x3f, r0	; 63
     95a:	0f 90       	pop	r0
     95c:	1f 90       	pop	r1
     95e:	18 95       	reti

00000960 <__vector_14>:
     960:	1f 92       	push	r1
     962:	0f 92       	push	r0
     964:	0f b6       	in	r0, 0x3f	; 63
     966:	0f 92       	push	r0
     968:	11 24       	eor	r1, r1
     96a:	8f 93       	push	r24
     96c:	9f 93       	push	r25
     96e:	ef 93       	push	r30
     970:	ff 93       	push	r31
     972:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <UART_TxHead>
     976:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <UART_TxTail>
     97a:	98 17       	cp	r25, r24
     97c:	61 f0       	breq	.+24     	; 0x996 <__vector_14+0x36>
     97e:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <UART_TxTail>
     982:	ef 5f       	subi	r30, 0xFF	; 255
     984:	ef 71       	andi	r30, 0x1F	; 31
     986:	e0 93 78 01 	sts	0x0178, r30	; 0x800178 <UART_TxTail>
     98a:	f0 e0       	ldi	r31, 0x00	; 0
     98c:	e6 58       	subi	r30, 0x86	; 134
     98e:	fa 4f       	sbci	r31, 0xFA	; 250
     990:	80 81       	ld	r24, Z
     992:	8c b9       	out	0x0c, r24	; 12
     994:	01 c0       	rjmp	.+2      	; 0x998 <__vector_14+0x38>
     996:	55 98       	cbi	0x0a, 5	; 10
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	0f 90       	pop	r0
     9a2:	0f be       	out	0x3f, r0	; 63
     9a4:	0f 90       	pop	r0
     9a6:	1f 90       	pop	r1
     9a8:	18 95       	reti

000009aa <uart_init>:
     9aa:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <UART_TxHead>
     9ae:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <UART_TxTail>
     9b2:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <UART_RxHead>
     9b6:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <UART_RxTail>
     9ba:	99 23       	and	r25, r25
     9bc:	1c f4       	brge	.+6      	; 0x9c4 <uart_init+0x1a>
     9be:	22 e0       	ldi	r18, 0x02	; 2
     9c0:	2b b9       	out	0x0b, r18	; 11
     9c2:	9f 77       	andi	r25, 0x7F	; 127
     9c4:	90 bd       	out	0x20, r25	; 32
     9c6:	89 b9       	out	0x09, r24	; 9
     9c8:	88 e9       	ldi	r24, 0x98	; 152
     9ca:	8a b9       	out	0x0a, r24	; 10
     9cc:	86 e8       	ldi	r24, 0x86	; 134
     9ce:	80 bd       	out	0x20, r24	; 32
     9d0:	08 95       	ret

000009d2 <uart_getc>:
     9d2:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <UART_RxHead>
     9d6:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <UART_RxTail>
     9da:	98 17       	cp	r25, r24
     9dc:	79 f0       	breq	.+30     	; 0x9fc <uart_getc+0x2a>
     9de:	e0 91 76 01 	lds	r30, 0x0176	; 0x800176 <UART_RxTail>
     9e2:	ef 5f       	subi	r30, 0xFF	; 255
     9e4:	e0 93 76 01 	sts	0x0176, r30	; 0x800176 <UART_RxTail>
     9e8:	f0 e0       	ldi	r31, 0x00	; 0
     9ea:	e6 58       	subi	r30, 0x86	; 134
     9ec:	fe 4f       	sbci	r31, 0xFE	; 254
     9ee:	80 81       	ld	r24, Z
     9f0:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <UART_LastRxError>
     9f4:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <UART_LastRxError>
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	08 95       	ret
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	91 e0       	ldi	r25, 0x01	; 1
     a00:	08 95       	ret

00000a02 <uartPutByte>:
     a02:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <UART_TxHead>
     a06:	2f 5f       	subi	r18, 0xFF	; 255
     a08:	2f 71       	andi	r18, 0x1F	; 31
     a0a:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <UART_TxTail>
     a0e:	29 17       	cp	r18, r25
     a10:	e1 f3       	breq	.-8      	; 0xa0a <uartPutByte+0x8>
     a12:	e2 2f       	mov	r30, r18
     a14:	f0 e0       	ldi	r31, 0x00	; 0
     a16:	e6 58       	subi	r30, 0x86	; 134
     a18:	fa 4f       	sbci	r31, 0xFA	; 250
     a1a:	80 83       	st	Z, r24
     a1c:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <UART_TxHead>
     a20:	55 9a       	sbi	0x0a, 5	; 10
     a22:	08 95       	ret

00000a24 <uartPutByteStr>:
     a24:	0f 93       	push	r16
     a26:	1f 93       	push	r17
     a28:	cf 93       	push	r28
     a2a:	df 93       	push	r29
     a2c:	00 97       	sbiw	r24, 0x00	; 0
     a2e:	81 f0       	breq	.+32     	; 0xa50 <uartPutByteStr+0x2c>
     a30:	66 23       	and	r22, r22
     a32:	71 f0       	breq	.+28     	; 0xa50 <uartPutByteStr+0x2c>
     a34:	ec 01       	movw	r28, r24
     a36:	61 50       	subi	r22, 0x01	; 1
     a38:	06 2f       	mov	r16, r22
     a3a:	10 e0       	ldi	r17, 0x00	; 0
     a3c:	0f 5f       	subi	r16, 0xFF	; 255
     a3e:	1f 4f       	sbci	r17, 0xFF	; 255
     a40:	08 0f       	add	r16, r24
     a42:	19 1f       	adc	r17, r25
     a44:	89 91       	ld	r24, Y+
     a46:	0e 94 01 05 	call	0xa02	; 0xa02 <uartPutByte>
     a4a:	0c 17       	cp	r16, r28
     a4c:	1d 07       	cpc	r17, r29
     a4e:	d1 f7       	brne	.-12     	; 0xa44 <uartPutByteStr+0x20>
     a50:	df 91       	pop	r29
     a52:	cf 91       	pop	r28
     a54:	1f 91       	pop	r17
     a56:	0f 91       	pop	r16
     a58:	08 95       	ret

00000a5a <uartReadRingBuff>:
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	ec 01       	movw	r28, r24
     a60:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <uart_getc>
     a64:	90 fd       	sbrc	r25, 0
     a66:	2a c0       	rjmp	.+84     	; 0xabc <uartReadRingBuff+0x62>
     a68:	81 30       	cpi	r24, 0x01	; 1
     a6a:	21 e0       	ldi	r18, 0x01	; 1
     a6c:	92 07       	cpc	r25, r18
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <uartReadRingBuff+0x20>
     a70:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <index.1836>
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	23 c0       	rjmp	.+70     	; 0xac0 <uartReadRingBuff+0x66>
     a7a:	20 91 73 01 	lds	r18, 0x0173	; 0x800173 <last.1838>
     a7e:	2d 30       	cpi	r18, 0x0D	; 13
     a80:	79 f4       	brne	.+30     	; 0xaa0 <uartReadRingBuff+0x46>
     a82:	8a 30       	cpi	r24, 0x0A	; 10
     a84:	91 05       	cpc	r25, r1
     a86:	61 f4       	brne	.+24     	; 0xaa0 <uartReadRingBuff+0x46>
     a88:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <index.1836>
     a8c:	fe 01       	movw	r30, r28
     a8e:	e8 0f       	add	r30, r24
     a90:	f1 1d       	adc	r31, r1
     a92:	31 97       	sbiw	r30, 0x01	; 1
     a94:	10 82       	st	Z, r1
     a96:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <index.1836>
     a9a:	8c 2f       	mov	r24, r28
     a9c:	9d 2f       	mov	r25, r29
     a9e:	10 c0       	rjmp	.+32     	; 0xac0 <uartReadRingBuff+0x66>
     aa0:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <last.1838>
     aa4:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <index.1836>
     aa8:	21 e0       	ldi	r18, 0x01	; 1
     aaa:	29 0f       	add	r18, r25
     aac:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <index.1836>
     ab0:	c9 0f       	add	r28, r25
     ab2:	d1 1d       	adc	r29, r1
     ab4:	88 83       	st	Y, r24
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	02 c0       	rjmp	.+4      	; 0xac0 <uartReadRingBuff+0x66>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	df 91       	pop	r29
     ac2:	cf 91       	pop	r28
     ac4:	08 95       	ret

00000ac6 <cmdPing>:
	if( val > max )
	{
		return 0;
	}
	return val;
}
     ac6:	ef 92       	push	r14
     ac8:	ff 92       	push	r15
     aca:	0f 93       	push	r16
     acc:	0f 2e       	mov	r0, r31
     ace:	f0 ef       	ldi	r31, 0xF0	; 240
     ad0:	ef 2e       	mov	r14, r31
     ad2:	f0 e0       	ldi	r31, 0x00	; 0
     ad4:	ff 2e       	mov	r15, r31
     ad6:	f0 2d       	mov	r31, r0
     ad8:	04 e0       	ldi	r16, 0x04	; 4
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	44 e0       	ldi	r20, 0x04	; 4
     ade:	60 e0       	ldi	r22, 0x00	; 0
     ae0:	86 e7       	ldi	r24, 0x76	; 118
     ae2:	96 e0       	ldi	r25, 0x06	; 6
     ae4:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     ae8:	86 e7       	ldi	r24, 0x76	; 118
     aea:	96 e0       	ldi	r25, 0x06	; 6
     aec:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     af0:	80 e0       	ldi	r24, 0x00	; 0
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	08 95       	ret

00000afa <cmdRelais>:
     afa:	ef 92       	push	r14
     afc:	ff 92       	push	r15
     afe:	0f 93       	push	r16
     b00:	cf 93       	push	r28
     b02:	df 93       	push	r29
     b04:	00 d0       	rcall	.+0      	; 0xb06 <cmdRelais+0xc>
     b06:	cd b7       	in	r28, 0x3d	; 61
     b08:	de b7       	in	r29, 0x3e	; 62
     b0a:	dc 01       	movw	r26, r24
     b0c:	14 96       	adiw	r26, 0x04	; 4
     b0e:	ed 91       	ld	r30, X+
     b10:	fc 91       	ld	r31, X
     b12:	15 97       	sbiw	r26, 0x05	; 5
     b14:	90 81       	ld	r25, Z
     b16:	29 2f       	mov	r18, r25
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	81 81       	ldd	r24, Z+1	; 0x01
     b1c:	81 30       	cpi	r24, 0x01	; 1
     b1e:	41 f1       	breq	.+80     	; 0xb70 <cmdRelais+0x76>
     b20:	20 f0       	brcs	.+8      	; 0xb2a <cmdRelais+0x30>
     b22:	82 30       	cpi	r24, 0x02	; 2
     b24:	09 f4       	brne	.+2      	; 0xb28 <cmdRelais+0x2e>
     b26:	45 c0       	rjmp	.+138    	; 0xbb2 <cmdRelais+0xb8>
     b28:	52 c0       	rjmp	.+164    	; 0xbce <cmdRelais+0xd4>
     b2a:	27 30       	cpi	r18, 0x07	; 7
     b2c:	31 05       	cpc	r19, r1
     b2e:	80 f4       	brcc	.+32     	; 0xb50 <cmdRelais+0x56>
     b30:	62 b3       	in	r22, 0x12	; 18
     b32:	2f 5f       	subi	r18, 0xFF	; 255
     b34:	3f 4f       	sbci	r19, 0xFF	; 255
     b36:	41 e0       	ldi	r20, 0x01	; 1
     b38:	50 e0       	ldi	r21, 0x00	; 0
     b3a:	fa 01       	movw	r30, r20
     b3c:	02 c0       	rjmp	.+4      	; 0xb42 <cmdRelais+0x48>
     b3e:	ee 0f       	add	r30, r30
     b40:	ff 1f       	adc	r31, r31
     b42:	2a 95       	dec	r18
     b44:	e2 f7       	brpl	.-8      	; 0xb3e <cmdRelais+0x44>
     b46:	9f 01       	movw	r18, r30
     b48:	20 95       	com	r18
     b4a:	26 23       	and	r18, r22
     b4c:	22 bb       	out	0x12, r18	; 18
     b4e:	3f c0       	rjmp	.+126    	; 0xbce <cmdRelais+0xd4>
     b50:	65 b3       	in	r22, 0x15	; 21
     b52:	25 50       	subi	r18, 0x05	; 5
     b54:	31 09       	sbc	r19, r1
     b56:	41 e0       	ldi	r20, 0x01	; 1
     b58:	50 e0       	ldi	r21, 0x00	; 0
     b5a:	da 01       	movw	r26, r20
     b5c:	02 c0       	rjmp	.+4      	; 0xb62 <cmdRelais+0x68>
     b5e:	aa 0f       	add	r26, r26
     b60:	bb 1f       	adc	r27, r27
     b62:	2a 95       	dec	r18
     b64:	e2 f7       	brpl	.-8      	; 0xb5e <cmdRelais+0x64>
     b66:	9d 01       	movw	r18, r26
     b68:	20 95       	com	r18
     b6a:	26 23       	and	r18, r22
     b6c:	25 bb       	out	0x15, r18	; 21
     b6e:	2f c0       	rjmp	.+94     	; 0xbce <cmdRelais+0xd4>
     b70:	27 30       	cpi	r18, 0x07	; 7
     b72:	31 05       	cpc	r19, r1
     b74:	78 f4       	brcc	.+30     	; 0xb94 <cmdRelais+0x9a>
     b76:	62 b3       	in	r22, 0x12	; 18
     b78:	2f 5f       	subi	r18, 0xFF	; 255
     b7a:	3f 4f       	sbci	r19, 0xFF	; 255
     b7c:	41 e0       	ldi	r20, 0x01	; 1
     b7e:	50 e0       	ldi	r21, 0x00	; 0
     b80:	fa 01       	movw	r30, r20
     b82:	02 c0       	rjmp	.+4      	; 0xb88 <cmdRelais+0x8e>
     b84:	ee 0f       	add	r30, r30
     b86:	ff 1f       	adc	r31, r31
     b88:	2a 95       	dec	r18
     b8a:	e2 f7       	brpl	.-8      	; 0xb84 <cmdRelais+0x8a>
     b8c:	9f 01       	movw	r18, r30
     b8e:	26 2b       	or	r18, r22
     b90:	22 bb       	out	0x12, r18	; 18
     b92:	1d c0       	rjmp	.+58     	; 0xbce <cmdRelais+0xd4>
     b94:	65 b3       	in	r22, 0x15	; 21
     b96:	25 50       	subi	r18, 0x05	; 5
     b98:	31 09       	sbc	r19, r1
     b9a:	41 e0       	ldi	r20, 0x01	; 1
     b9c:	50 e0       	ldi	r21, 0x00	; 0
     b9e:	da 01       	movw	r26, r20
     ba0:	02 c0       	rjmp	.+4      	; 0xba6 <cmdRelais+0xac>
     ba2:	aa 0f       	add	r26, r26
     ba4:	bb 1f       	adc	r27, r27
     ba6:	2a 95       	dec	r18
     ba8:	e2 f7       	brpl	.-8      	; 0xba2 <cmdRelais+0xa8>
     baa:	9d 01       	movw	r18, r26
     bac:	26 2b       	or	r18, r22
     bae:	25 bb       	out	0x15, r18	; 21
     bb0:	0e c0       	rjmp	.+28     	; 0xbce <cmdRelais+0xd4>
     bb2:	29 2f       	mov	r18, r25
     bb4:	22 0f       	add	r18, r18
     bb6:	22 0f       	add	r18, r18
     bb8:	22 bb       	out	0x12, r18	; 18
     bba:	29 2f       	mov	r18, r25
     bbc:	20 7c       	andi	r18, 0xC0	; 192
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	32 95       	swap	r19
     bc2:	22 95       	swap	r18
     bc4:	2f 70       	andi	r18, 0x0F	; 15
     bc6:	23 27       	eor	r18, r19
     bc8:	3f 70       	andi	r19, 0x0F	; 15
     bca:	23 27       	eor	r18, r19
     bcc:	25 bb       	out	0x15, r18	; 21
     bce:	99 83       	std	Y+1, r25	; 0x01
     bd0:	8a 83       	std	Y+2, r24	; 0x02
     bd2:	fe 01       	movw	r30, r28
     bd4:	31 96       	adiw	r30, 0x01	; 1
     bd6:	7f 01       	movw	r14, r30
     bd8:	02 e0       	ldi	r16, 0x02	; 2
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	40 e0       	ldi	r20, 0x00	; 0
     bde:	65 e0       	ldi	r22, 0x05	; 5
     be0:	86 e7       	ldi	r24, 0x76	; 118
     be2:	96 e0       	ldi	r25, 0x06	; 6
     be4:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     be8:	86 e7       	ldi	r24, 0x76	; 118
     bea:	96 e0       	ldi	r25, 0x06	; 6
     bec:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	0f 90       	pop	r0
     bf4:	0f 90       	pop	r0
     bf6:	df 91       	pop	r29
     bf8:	cf 91       	pop	r28
     bfa:	0f 91       	pop	r16
     bfc:	ff 90       	pop	r15
     bfe:	ef 90       	pop	r14
     c00:	08 95       	ret

00000c02 <cmdGetTemp>:
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	0f 93       	push	r16
     c08:	cf 93       	push	r28
     c0a:	df 93       	push	r29
     c0c:	00 d0       	rcall	.+0      	; 0xc0e <cmdGetTemp+0xc>
     c0e:	00 d0       	rcall	.+0      	; 0xc10 <cmdGetTemp+0xe>
     c10:	00 d0       	rcall	.+0      	; 0xc12 <cmdGetTemp+0x10>
     c12:	cd b7       	in	r28, 0x3d	; 61
     c14:	de b7       	in	r29, 0x3e	; 62
     c16:	a7 e6       	ldi	r26, 0x67	; 103
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	12 96       	adiw	r26, 0x02	; 2
     c1c:	8c 91       	ld	r24, X
     c1e:	12 97       	sbiw	r26, 0x02	; 2
     c20:	89 83       	std	Y+1, r24	; 0x01
     c22:	eb e6       	ldi	r30, 0x6B	; 107
     c24:	f0 e0       	ldi	r31, 0x00	; 0
     c26:	82 81       	ldd	r24, Z+2	; 0x02
     c28:	8a 83       	std	Y+2, r24	; 0x02
     c2a:	13 96       	adiw	r26, 0x03	; 3
     c2c:	8c 91       	ld	r24, X
     c2e:	13 97       	sbiw	r26, 0x03	; 3
     c30:	8b 83       	std	Y+3, r24	; 0x03
     c32:	11 96       	adiw	r26, 0x01	; 1
     c34:	8c 91       	ld	r24, X
     c36:	8c 83       	std	Y+4, r24	; 0x04
     c38:	83 81       	ldd	r24, Z+3	; 0x03
     c3a:	8d 83       	std	Y+5, r24	; 0x05
     c3c:	81 81       	ldd	r24, Z+1	; 0x01
     c3e:	8e 83       	std	Y+6, r24	; 0x06
     c40:	ce 01       	movw	r24, r28
     c42:	01 96       	adiw	r24, 0x01	; 1
     c44:	7c 01       	movw	r14, r24
     c46:	06 e0       	ldi	r16, 0x06	; 6
     c48:	20 e0       	ldi	r18, 0x00	; 0
     c4a:	45 e0       	ldi	r20, 0x05	; 5
     c4c:	66 e0       	ldi	r22, 0x06	; 6
     c4e:	86 e7       	ldi	r24, 0x76	; 118
     c50:	96 e0       	ldi	r25, 0x06	; 6
     c52:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     c56:	86 e7       	ldi	r24, 0x76	; 118
     c58:	96 e0       	ldi	r25, 0x06	; 6
     c5a:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	26 96       	adiw	r28, 0x06	; 6
     c62:	0f b6       	in	r0, 0x3f	; 63
     c64:	f8 94       	cli
     c66:	de bf       	out	0x3e, r29	; 62
     c68:	0f be       	out	0x3f, r0	; 63
     c6a:	cd bf       	out	0x3d, r28	; 61
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	0f 91       	pop	r16
     c72:	ff 90       	pop	r15
     c74:	ef 90       	pop	r14
     c76:	08 95       	ret

00000c78 <cmdGetState>:
     c78:	ef 92       	push	r14
     c7a:	ff 92       	push	r15
     c7c:	0f 93       	push	r16
     c7e:	cf 93       	push	r28
     c80:	df 93       	push	r29
     c82:	00 d0       	rcall	.+0      	; 0xc84 <cmdGetState+0xc>
     c84:	00 d0       	rcall	.+0      	; 0xc86 <cmdGetState+0xe>
     c86:	00 d0       	rcall	.+0      	; 0xc88 <cmdGetState+0x10>
     c88:	cd b7       	in	r28, 0x3d	; 61
     c8a:	de b7       	in	r29, 0x3e	; 62
     c8c:	ee e5       	ldi	r30, 0x5E	; 94
     c8e:	f6 e0       	ldi	r31, 0x06	; 6
     c90:	85 81       	ldd	r24, Z+5	; 0x05
     c92:	96 81       	ldd	r25, Z+6	; 0x06
     c94:	89 83       	std	Y+1, r24	; 0x01
     c96:	85 81       	ldd	r24, Z+5	; 0x05
     c98:	96 81       	ldd	r25, Z+6	; 0x06
     c9a:	9a 83       	std	Y+2, r25	; 0x02
     c9c:	87 81       	ldd	r24, Z+7	; 0x07
     c9e:	90 85       	ldd	r25, Z+8	; 0x08
     ca0:	8b 83       	std	Y+3, r24	; 0x03
     ca2:	87 81       	ldd	r24, Z+7	; 0x07
     ca4:	90 85       	ldd	r25, Z+8	; 0x08
     ca6:	9c 83       	std	Y+4, r25	; 0x04
     ca8:	81 85       	ldd	r24, Z+9	; 0x09
     caa:	92 85       	ldd	r25, Z+10	; 0x0a
     cac:	8d 83       	std	Y+5, r24	; 0x05
     cae:	81 85       	ldd	r24, Z+9	; 0x09
     cb0:	92 85       	ldd	r25, Z+10	; 0x0a
     cb2:	9e 83       	std	Y+6, r25	; 0x06
     cb4:	ce 01       	movw	r24, r28
     cb6:	01 96       	adiw	r24, 0x01	; 1
     cb8:	7c 01       	movw	r14, r24
     cba:	06 e0       	ldi	r16, 0x06	; 6
     cbc:	20 e0       	ldi	r18, 0x00	; 0
     cbe:	40 e0       	ldi	r20, 0x00	; 0
     cc0:	67 e0       	ldi	r22, 0x07	; 7
     cc2:	86 e7       	ldi	r24, 0x76	; 118
     cc4:	96 e0       	ldi	r25, 0x06	; 6
     cc6:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     cca:	86 e7       	ldi	r24, 0x76	; 118
     ccc:	96 e0       	ldi	r25, 0x06	; 6
     cce:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     cd2:	80 e0       	ldi	r24, 0x00	; 0
     cd4:	26 96       	adiw	r28, 0x06	; 6
     cd6:	0f b6       	in	r0, 0x3f	; 63
     cd8:	f8 94       	cli
     cda:	de bf       	out	0x3e, r29	; 62
     cdc:	0f be       	out	0x3f, r0	; 63
     cde:	cd bf       	out	0x3d, r28	; 61
     ce0:	df 91       	pop	r29
     ce2:	cf 91       	pop	r28
     ce4:	0f 91       	pop	r16
     ce6:	ff 90       	pop	r15
     ce8:	ef 90       	pop	r14
     cea:	08 95       	ret

00000cec <cmdSetDebugMode>:
     cec:	ef 92       	push	r14
     cee:	ff 92       	push	r15
     cf0:	0f 93       	push	r16
     cf2:	80 91 5d 06 	lds	r24, 0x065D	; 0x80065d <DebugModeEnable>
     cf6:	81 11       	cpse	r24, r1
     cf8:	19 c0       	rjmp	.+50     	; 0xd2c <cmdSetDebugMode+0x40>
     cfa:	81 e0       	ldi	r24, 0x01	; 1
     cfc:	80 93 5d 06 	sts	0x065D, r24	; 0x80065d <DebugModeEnable>
     d00:	0f 2e       	mov	r0, r31
     d02:	f5 ef       	ldi	r31, 0xF5	; 245
     d04:	ef 2e       	mov	r14, r31
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	ff 2e       	mov	r15, r31
     d0a:	f0 2d       	mov	r31, r0
     d0c:	0d e0       	ldi	r16, 0x0D	; 13
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	44 e0       	ldi	r20, 0x04	; 4
     d12:	6f ef       	ldi	r22, 0xFF	; 255
     d14:	86 e7       	ldi	r24, 0x76	; 118
     d16:	96 e0       	ldi	r25, 0x06	; 6
     d18:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     d1c:	e0 e6       	ldi	r30, 0x60	; 96
     d1e:	f0 e0       	ldi	r31, 0x00	; 0
     d20:	80 e3       	ldi	r24, 0x30	; 48
     d22:	80 83       	st	Z, r24
     d24:	81 83       	std	Z+1, r24	; 0x01
     d26:	82 83       	std	Z+2, r24	; 0x02
     d28:	83 83       	std	Z+3, r24	; 0x03
     d2a:	10 c0       	rjmp	.+32     	; 0xd4c <cmdSetDebugMode+0x60>
     d2c:	10 92 5d 06 	sts	0x065D, r1	; 0x80065d <DebugModeEnable>
     d30:	0f 2e       	mov	r0, r31
     d32:	f3 e0       	ldi	r31, 0x03	; 3
     d34:	ef 2e       	mov	r14, r31
     d36:	f1 e0       	ldi	r31, 0x01	; 1
     d38:	ff 2e       	mov	r15, r31
     d3a:	f0 2d       	mov	r31, r0
     d3c:	0d e0       	ldi	r16, 0x0D	; 13
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	44 e0       	ldi	r20, 0x04	; 4
     d42:	6f ef       	ldi	r22, 0xFF	; 255
     d44:	86 e7       	ldi	r24, 0x76	; 118
     d46:	96 e0       	ldi	r25, 0x06	; 6
     d48:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     d4c:	86 e7       	ldi	r24, 0x76	; 118
     d4e:	96 e0       	ldi	r25, 0x06	; 6
     d50:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     d54:	80 e0       	ldi	r24, 0x00	; 0
     d56:	0f 91       	pop	r16
     d58:	ff 90       	pop	r15
     d5a:	ef 90       	pop	r14
     d5c:	08 95       	ret

00000d5e <cmdGetVersion>:
     d5e:	ef 92       	push	r14
     d60:	ff 92       	push	r15
     d62:	0f 93       	push	r16
     d64:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <buildVer>
     d68:	7c 01       	movw	r14, r24
     d6a:	01 e1       	ldi	r16, 0x11	; 17
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	44 e0       	ldi	r20, 0x04	; 4
     d70:	61 e0       	ldi	r22, 0x01	; 1
     d72:	86 e7       	ldi	r24, 0x76	; 118
     d74:	96 e0       	ldi	r25, 0x06	; 6
     d76:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     d7a:	86 e7       	ldi	r24, 0x76	; 118
     d7c:	96 e0       	ldi	r25, 0x06	; 6
     d7e:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     d82:	80 e0       	ldi	r24, 0x00	; 0
     d84:	0f 91       	pop	r16
     d86:	ff 90       	pop	r15
     d88:	ef 90       	pop	r14
     d8a:	08 95       	ret

00000d8c <cmdDisplay>:
     d8c:	ef 92       	push	r14
     d8e:	ff 92       	push	r15
     d90:	0f 93       	push	r16
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	ec 01       	movw	r28, r24
     d98:	86 e9       	ldi	r24, 0x96	; 150
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <selectFont>
     da0:	ec 81       	ldd	r30, Y+4	; 0x04
     da2:	fd 81       	ldd	r31, Y+5	; 0x05
     da4:	cf 01       	movw	r24, r30
     da6:	01 96       	adiw	r24, 0x01	; 1
     da8:	9d 83       	std	Y+5, r25	; 0x05
     daa:	8c 83       	std	Y+4, r24	; 0x04
     dac:	80 81       	ld	r24, Z
     dae:	88 23       	and	r24, r24
     db0:	19 f0       	breq	.+6      	; 0xdb8 <cmdDisplay+0x2c>
     db2:	81 30       	cpi	r24, 0x01	; 1
     db4:	c9 f0       	breq	.+50     	; 0xde8 <cmdDisplay+0x5c>
     db6:	31 c0       	rjmp	.+98     	; 0xe1a <cmdDisplay+0x8e>
     db8:	82 e8       	ldi	r24, 0x82	; 130
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	0e 94 dd 01 	call	0x3ba	; 0x3ba <selectFont>
     dc0:	80 e3       	ldi	r24, 0x30	; 48
     dc2:	e0 e6       	ldi	r30, 0x60	; 96
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 83       	st	Z, r24
     dc8:	81 83       	std	Z+1, r24	; 0x01
     dca:	82 83       	std	Z+2, r24	; 0x02
     dcc:	83 83       	std	Z+3, r24	; 0x03
     dce:	2f ef       	ldi	r18, 0xFF	; 255
     dd0:	39 e6       	ldi	r19, 0x69	; 105
     dd2:	98 e1       	ldi	r25, 0x18	; 24
     dd4:	21 50       	subi	r18, 0x01	; 1
     dd6:	30 40       	sbci	r19, 0x00	; 0
     dd8:	90 40       	sbci	r25, 0x00	; 0
     dda:	e1 f7       	brne	.-8      	; 0xdd4 <cmdDisplay+0x48>
     ddc:	00 c0       	rjmp	.+0      	; 0xdde <cmdDisplay+0x52>
     dde:	00 00       	nop
     de0:	8f 5f       	subi	r24, 0xFF	; 255
     de2:	87 33       	cpi	r24, 0x37	; 55
     de4:	81 f7       	brne	.-32     	; 0xdc6 <cmdDisplay+0x3a>
     de6:	19 c0       	rjmp	.+50     	; 0xe1a <cmdDisplay+0x8e>
     de8:	e0 e6       	ldi	r30, 0x60	; 96
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	24 e6       	ldi	r18, 0x64	; 100
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	ac 81       	ldd	r26, Y+4	; 0x04
     df2:	bd 81       	ldd	r27, Y+5	; 0x05
     df4:	cd 01       	movw	r24, r26
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	9d 83       	std	Y+5, r25	; 0x05
     dfa:	8c 83       	std	Y+4, r24	; 0x04
     dfc:	8c 91       	ld	r24, X
     dfe:	80 5d       	subi	r24, 0xD0	; 208
     e00:	81 93       	st	Z+, r24
     e02:	2e 17       	cp	r18, r30
     e04:	3f 07       	cpc	r19, r31
     e06:	a1 f7       	brne	.-24     	; 0xdf0 <cmdDisplay+0x64>
     e08:	2f ef       	ldi	r18, 0xFF	; 255
     e0a:	3d e3       	ldi	r19, 0x3D	; 61
     e0c:	89 e4       	ldi	r24, 0x49	; 73
     e0e:	21 50       	subi	r18, 0x01	; 1
     e10:	30 40       	sbci	r19, 0x00	; 0
     e12:	80 40       	sbci	r24, 0x00	; 0
     e14:	e1 f7       	brne	.-8      	; 0xe0e <cmdDisplay+0x82>
     e16:	00 c0       	rjmp	.+0      	; 0xe18 <cmdDisplay+0x8c>
     e18:	00 00       	nop
     e1a:	e1 2c       	mov	r14, r1
     e1c:	f1 2c       	mov	r15, r1
     e1e:	00 e0       	ldi	r16, 0x00	; 0
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	40 e0       	ldi	r20, 0x00	; 0
     e24:	62 e0       	ldi	r22, 0x02	; 2
     e26:	86 e7       	ldi	r24, 0x76	; 118
     e28:	96 e0       	ldi	r25, 0x06	; 6
     e2a:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     e2e:	86 e7       	ldi	r24, 0x76	; 118
     e30:	96 e0       	ldi	r25, 0x06	; 6
     e32:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	0f 91       	pop	r16
     e3e:	ff 90       	pop	r15
     e40:	ef 90       	pop	r14
     e42:	08 95       	ret

00000e44 <cmdSetTime>:
     e44:	ef 92       	push	r14
     e46:	ff 92       	push	r15
     e48:	0f 93       	push	r16
     e4a:	fc 01       	movw	r30, r24
     e4c:	20 81       	ld	r18, Z
     e4e:	23 30       	cpi	r18, 0x03	; 3
     e50:	19 f5       	brne	.+70     	; 0xe98 <cmdSetTime+0x54>
     e52:	a4 81       	ldd	r26, Z+4	; 0x04
     e54:	b5 81       	ldd	r27, Z+5	; 0x05
     e56:	cd 01       	movw	r24, r26
     e58:	01 96       	adiw	r24, 0x01	; 1
     e5a:	95 83       	std	Z+5, r25	; 0x05
     e5c:	84 83       	std	Z+4, r24	; 0x04
     e5e:	8c 91       	ld	r24, X
     e60:	9d 01       	movw	r18, r26
     e62:	2e 5f       	subi	r18, 0xFE	; 254
     e64:	3f 4f       	sbci	r19, 0xFF	; 255
     e66:	35 83       	std	Z+5, r19	; 0x05
     e68:	24 83       	std	Z+4, r18	; 0x04
     e6a:	12 96       	adiw	r26, 0x02	; 2
     e6c:	4c 91       	ld	r20, X
     e6e:	12 97       	sbiw	r26, 0x02	; 2
     e70:	11 96       	adiw	r26, 0x01	; 1
     e72:	6c 91       	ld	r22, X
     e74:	0e 94 48 03 	call	0x690	; 0x690 <rtcSetTime>
     e78:	e1 2c       	mov	r14, r1
     e7a:	f1 2c       	mov	r15, r1
     e7c:	00 e0       	ldi	r16, 0x00	; 0
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	40 e0       	ldi	r20, 0x00	; 0
     e82:	63 e0       	ldi	r22, 0x03	; 3
     e84:	86 e7       	ldi	r24, 0x76	; 118
     e86:	96 e0       	ldi	r25, 0x06	; 6
     e88:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     e8c:	86 e7       	ldi	r24, 0x76	; 118
     e8e:	96 e0       	ldi	r25, 0x06	; 6
     e90:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	01 c0       	rjmp	.+2      	; 0xe9a <cmdSetTime+0x56>
     e98:	81 e0       	ldi	r24, 0x01	; 1
     e9a:	0f 91       	pop	r16
     e9c:	ff 90       	pop	r15
     e9e:	ef 90       	pop	r14
     ea0:	08 95       	ret

00000ea2 <cmdReadRtc>:
     ea2:	ef 92       	push	r14
     ea4:	ff 92       	push	r15
     ea6:	0f 93       	push	r16
     ea8:	1f 93       	push	r17
     eaa:	cf 93       	push	r28
     eac:	df 93       	push	r29
     eae:	00 d0       	rcall	.+0      	; 0xeb0 <cmdReadRtc+0xe>
     eb0:	00 d0       	rcall	.+0      	; 0xeb2 <cmdReadRtc+0x10>
     eb2:	00 d0       	rcall	.+0      	; 0xeb4 <cmdReadRtc+0x12>
     eb4:	cd b7       	in	r28, 0x3d	; 61
     eb6:	de b7       	in	r29, 0x3e	; 62
     eb8:	09 e6       	ldi	r16, 0x69	; 105
     eba:	16 e0       	ldi	r17, 0x06	; 6
     ebc:	f8 01       	movw	r30, r16
     ebe:	82 81       	ldd	r24, Z+2	; 0x02
     ec0:	0e 94 2a 03 	call	0x654	; 0x654 <rtcBcdToDec>
     ec4:	89 83       	std	Y+1, r24	; 0x01
     ec6:	f8 01       	movw	r30, r16
     ec8:	81 81       	ldd	r24, Z+1	; 0x01
     eca:	0e 94 2a 03 	call	0x654	; 0x654 <rtcBcdToDec>
     ece:	8a 83       	std	Y+2, r24	; 0x02
     ed0:	f8 01       	movw	r30, r16
     ed2:	80 81       	ld	r24, Z
     ed4:	0e 94 2a 03 	call	0x654	; 0x654 <rtcBcdToDec>
     ed8:	8b 83       	std	Y+3, r24	; 0x03
     eda:	f8 01       	movw	r30, r16
     edc:	84 81       	ldd	r24, Z+4	; 0x04
     ede:	0e 94 2a 03 	call	0x654	; 0x654 <rtcBcdToDec>
     ee2:	8c 83       	std	Y+4, r24	; 0x04
     ee4:	f8 01       	movw	r30, r16
     ee6:	83 81       	ldd	r24, Z+3	; 0x03
     ee8:	0e 94 2a 03 	call	0x654	; 0x654 <rtcBcdToDec>
     eec:	8d 83       	std	Y+5, r24	; 0x05
     eee:	f8 01       	movw	r30, r16
     ef0:	86 81       	ldd	r24, Z+6	; 0x06
     ef2:	0e 94 2a 03 	call	0x654	; 0x654 <rtcBcdToDec>
     ef6:	8e 83       	std	Y+6, r24	; 0x06
     ef8:	ce 01       	movw	r24, r28
     efa:	01 96       	adiw	r24, 0x01	; 1
     efc:	7c 01       	movw	r14, r24
     efe:	06 e0       	ldi	r16, 0x06	; 6
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	40 e0       	ldi	r20, 0x00	; 0
     f04:	64 e0       	ldi	r22, 0x04	; 4
     f06:	86 e7       	ldi	r24, 0x76	; 118
     f08:	96 e0       	ldi	r25, 0x06	; 6
     f0a:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
     f0e:	86 e7       	ldi	r24, 0x76	; 118
     f10:	96 e0       	ldi	r25, 0x06	; 6
     f12:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
     f16:	80 e0       	ldi	r24, 0x00	; 0
     f18:	26 96       	adiw	r28, 0x06	; 6
     f1a:	0f b6       	in	r0, 0x3f	; 63
     f1c:	f8 94       	cli
     f1e:	de bf       	out	0x3e, r29	; 62
     f20:	0f be       	out	0x3f, r0	; 63
     f22:	cd bf       	out	0x3d, r28	; 61
     f24:	df 91       	pop	r29
     f26:	cf 91       	pop	r28
     f28:	1f 91       	pop	r17
     f2a:	0f 91       	pop	r16
     f2c:	ff 90       	pop	r15
     f2e:	ef 90       	pop	r14
     f30:	08 95       	ret

00000f32 <checkTempSwell>:
     f32:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <tmp102+0x2>
     f36:	80 93 5f 06 	sts	0x065F, r24	; 0x80065f <sys+0x1>
     f3a:	e7 e6       	ldi	r30, 0x67	; 103
     f3c:	f0 e0       	ldi	r31, 0x00	; 0
     f3e:	92 81       	ldd	r25, Z+2	; 0x02
     f40:	21 81       	ldd	r18, Z+1	; 0x01
     f42:	92 17       	cp	r25, r18
     f44:	14 f4       	brge	.+4      	; 0xf4a <checkTempSwell+0x18>
     f46:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <sts3x+0x1>
     f4a:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <tmp102+0x1>
     f4e:	82 17       	cp	r24, r18
     f50:	14 f4       	brge	.+4      	; 0xf56 <checkTempSwell+0x24>
     f52:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <tmp102+0x1>
     f56:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <sts3x+0x3>
     f5a:	29 17       	cp	r18, r25
     f5c:	14 f4       	brge	.+4      	; 0xf62 <checkTempSwell+0x30>
     f5e:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <sts3x+0x3>
     f62:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <tmp102+0x3>
     f66:	98 17       	cp	r25, r24
     f68:	14 f4       	brge	.+4      	; 0xf6e <checkTempSwell+0x3c>
     f6a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <tmp102+0x3>
     f6e:	08 95       	ret

00000f70 <timerInit>:
     f70:	8e b5       	in	r24, 0x2e	; 46
     f72:	89 60       	ori	r24, 0x09	; 9
     f74:	8e bd       	out	0x2e, r24	; 46
     f76:	89 b7       	in	r24, 0x39	; 57
     f78:	80 61       	ori	r24, 0x10	; 16
     f7a:	89 bf       	out	0x39, r24	; 57
     f7c:	80 ed       	ldi	r24, 0xD0	; 208
     f7e:	97 e0       	ldi	r25, 0x07	; 7
     f80:	9b bd       	out	0x2b, r25	; 43
     f82:	8a bd       	out	0x2a, r24	; 42
     f84:	08 95       	ret

00000f86 <eepLoad>:

void eepLoad( eep_t *e )
{
     f86:	cf 93       	push	r28
     f88:	df 93       	push	r29
     f8a:	ec 01       	movw	r28, r24
	if ( eeprom_read_byte( &e->isInit ) != 0xA2 )
     f8c:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <eeprom_read_byte>
     f90:	82 3a       	cpi	r24, 0xA2	; 162
     f92:	39 f0       	breq	.+14     	; 0xfa2 <eepLoad+0x1c>
	{
		eepRAM.isInit = 0x00;
     f94:	10 92 75 06 	sts	0x0675, r1	; 0x800675 <eepRAM>
		eeprom_write_byte( &e->isInit , 0xA2 );
     f98:	62 ea       	ldi	r22, 0xA2	; 162
     f9a:	ce 01       	movw	r24, r28
     f9c:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <eeprom_write_byte>
     fa0:	03 c0       	rjmp	.+6      	; 0xfa8 <eepLoad+0x22>
	}
	else
	{
		eepRAM.isInit = 0x01;
     fa2:	81 e0       	ldi	r24, 0x01	; 1
     fa4:	80 93 75 06 	sts	0x0675, r24	; 0x800675 <eepRAM>
	}
}
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	08 95       	ret

00000fae <scrollMessage>:

void scrollMessage( char *msg , uint16_t delay_ms , uint8_t wait )
{
     fae:	9f 92       	push	r9
     fb0:	af 92       	push	r10
     fb2:	bf 92       	push	r11
     fb4:	cf 92       	push	r12
     fb6:	df 92       	push	r13
     fb8:	ef 92       	push	r14
     fba:	ff 92       	push	r15
     fbc:	0f 93       	push	r16
     fbe:	1f 93       	push	r17
     fc0:	cf 93       	push	r28
     fc2:	df 93       	push	r29
     fc4:	8c 01       	movw	r16, r24
     fc6:	7b 01       	movw	r14, r22
     fc8:	d4 2e       	mov	r13, r20
	uint8_t leng = strlen( msg );
     fca:	fc 01       	movw	r30, r24
     fcc:	01 90       	ld	r0, Z+
     fce:	00 20       	and	r0, r0
     fd0:	e9 f7       	brne	.-6      	; 0xfcc <scrollMessage+0x1e>
     fd2:	31 97       	sbiw	r30, 0x01	; 1
     fd4:	5f 01       	movw	r10, r30
     fd6:	a8 1a       	sub	r10, r24
     fd8:	b9 0a       	sbc	r11, r25
	static int8_t pos = -DIGITS;
	uint8_t w_ = wait;
	
	selectFont( (char**) charMap );
     fda:	86 e9       	ldi	r24, 0x96	; 150
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	0e 94 dd 01 	call	0x3ba	; 0x3ba <selectFont>
     fe2:	c0 90 6f 00 	lds	r12, 0x006F	; 0x80006f <pos.2696>
	
	do 
	{
		if ( sys.scroll >= delay_ms && !sys.scrollIsRdy )
     fe6:	ce e5       	ldi	r28, 0x5E	; 94
     fe8:	d6 e0       	ldi	r29, 0x06	; 6
			{
				if ( (pos + ramPos) < 0 )
				{
					disp.dig[ramPos] = ' '; // Leerzeichen
				}
				else if ( (pos + ramPos) > leng - 1 )
     fea:	bb 24       	eor	r11, r11
     fec:	b5 01       	movw	r22, r10
     fee:	61 50       	subi	r22, 0x01	; 1
     ff0:	71 09       	sbc	r23, r1
				{
					disp.dig[ramPos] = ' '; // Leerzeichen
     ff2:	68 94       	set
     ff4:	99 24       	eor	r9, r9
     ff6:	95 f8       	bld	r9, 5
	
	selectFont( (char**) charMap );
	
	do 
	{
		if ( sys.scroll >= delay_ms && !sys.scrollIsRdy )
     ff8:	8a 81       	ldd	r24, Y+2	; 0x02
     ffa:	9b 81       	ldd	r25, Y+3	; 0x03
     ffc:	8e 15       	cp	r24, r14
     ffe:	9f 05       	cpc	r25, r15
    1000:	80 f1       	brcs	.+96     	; 0x1062 <scrollMessage+0xb4>
    1002:	8c 81       	ldd	r24, Y+4	; 0x04
    1004:	81 11       	cpse	r24, r1
    1006:	2d c0       	rjmp	.+90     	; 0x1062 <scrollMessage+0xb4>
		{
			for ( int8_t ramPos = 0 ; ramPos < DIGITS ; ramPos++ )
			{
				if ( (pos + ramPos) < 0 )
    1008:	4c 2d       	mov	r20, r12
    100a:	0c 2c       	mov	r0, r12
    100c:	00 0c       	add	r0, r0
    100e:	55 0b       	sbc	r21, r21
    1010:	a0 e6       	ldi	r26, 0x60	; 96
    1012:	b0 e0       	ldi	r27, 0x00	; 0
    1014:	f8 01       	movw	r30, r16
    1016:	e4 0f       	add	r30, r20
    1018:	f5 1f       	adc	r31, r21
    101a:	9a 01       	movw	r18, r20
    101c:	2c 5f       	subi	r18, 0xFC	; 252
    101e:	3f 4f       	sbci	r19, 0xFF	; 255
    1020:	20 0f       	add	r18, r16
    1022:	31 1f       	adc	r19, r17
    1024:	cf 01       	movw	r24, r30
    1026:	80 1b       	sub	r24, r16
    1028:	91 0b       	sbc	r25, r17
    102a:	12 f4       	brpl	.+4      	; 0x1030 <scrollMessage+0x82>
				{
					disp.dig[ramPos] = ' '; // Leerzeichen
    102c:	9c 92       	st	X, r9
    102e:	07 c0       	rjmp	.+14     	; 0x103e <scrollMessage+0x90>
				}
				else if ( (pos + ramPos) > leng - 1 )
    1030:	68 17       	cp	r22, r24
    1032:	79 07       	cpc	r23, r25
    1034:	14 f4       	brge	.+4      	; 0x103a <scrollMessage+0x8c>
				{
					disp.dig[ramPos] = ' '; // Leerzeichen
    1036:	9c 92       	st	X, r9
    1038:	02 c0       	rjmp	.+4      	; 0x103e <scrollMessage+0x90>
				}
				else
				{
					disp.dig[ramPos] = msg[ ramPos + pos ];
    103a:	80 81       	ld	r24, Z
    103c:	8c 93       	st	X, r24
    103e:	11 96       	adiw	r26, 0x01	; 1
    1040:	31 96       	adiw	r30, 0x01	; 1
	
	do 
	{
		if ( sys.scroll >= delay_ms && !sys.scrollIsRdy )
		{
			for ( int8_t ramPos = 0 ; ramPos < DIGITS ; ramPos++ )
    1042:	e2 17       	cp	r30, r18
    1044:	f3 07       	cpc	r31, r19
    1046:	71 f7       	brne	.-36     	; 0x1024 <scrollMessage+0x76>
				{
					disp.dig[ramPos] = msg[ ramPos + pos ];
				}
			}

			if( pos == leng )
    1048:	4a 15       	cp	r20, r10
    104a:	5b 05       	cpc	r21, r11
    104c:	39 f4       	brne	.+14     	; 0x105c <scrollMessage+0xae>
			{
				pos = -DIGITS;
    104e:	8c ef       	ldi	r24, 0xFC	; 252
    1050:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <pos.2696>
				sys.scrollIsRdy = 1;
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	80 93 62 06 	sts	0x0662, r24	; 0x800662 <sys+0x4>
				w_ = 0;
				break;
    105a:	07 c0       	rjmp	.+14     	; 0x106a <scrollMessage+0xbc>
			}
			else
			{
				pos += 1;
    105c:	c3 94       	inc	r12
			}	
		
			sys.scroll	= 0;
    105e:	1b 82       	std	Y+3, r1	; 0x03
    1060:	1a 82       	std	Y+2, r1	; 0x02
		}		
	} while ( w_ );
    1062:	d1 10       	cpse	r13, r1
    1064:	c9 cf       	rjmp	.-110    	; 0xff8 <scrollMessage+0x4a>
    1066:	c0 92 6f 00 	sts	0x006F, r12	; 0x80006f <pos.2696>
}
    106a:	df 91       	pop	r29
    106c:	cf 91       	pop	r28
    106e:	1f 91       	pop	r17
    1070:	0f 91       	pop	r16
    1072:	ff 90       	pop	r15
    1074:	ef 90       	pop	r14
    1076:	df 90       	pop	r13
    1078:	cf 90       	pop	r12
    107a:	bf 90       	pop	r11
    107c:	af 90       	pop	r10
    107e:	9f 90       	pop	r9
    1080:	08 95       	ret

00001082 <main>:

uint8_t *streamPtr		= NULL;
uint8_t	streamIn[128]	= "";

int main(void)
{
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	cd b7       	in	r28, 0x3d	; 61
    1088:	de b7       	in	r29, 0x3e	; 62
    108a:	28 97       	sbiw	r28, 0x08	; 8
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	f8 94       	cli
    1090:	de bf       	out	0x3e, r29	; 62
    1092:	0f be       	out	0x3f, r0	; 63
    1094:	cd bf       	out	0x3d, r28	; 61
	hardware_init();
    1096:	0e 94 d7 02 	call	0x5ae	; 0x5ae <hardware_init>
	uart_init( UART_BAUD_SELECT( 19200 , F_CPU ) );
    109a:	83 e3       	ldi	r24, 0x33	; 51
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	0e 94 d5 04 	call	0x9aa	; 0x9aa <uart_init>
	
	eepLoad( &eep );
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	0e 94 c3 07 	call	0xf86	; 0xf86 <eepLoad>
	i2c_init();
    10aa:	0e 94 75 00 	call	0xea	; 0xea <i2c_init>
	mcp23017_init();
    10ae:	0e 94 0e 03 	call	0x61c	; 0x61c <mcp23017_init>

	sts3xInit();
    10b2:	0e 94 47 04 	call	0x88e	; 0x88e <sts3xInit>
	timerInit();
    10b6:	0e 94 b8 07 	call	0xf70	; 0xf70 <timerInit>
	cmdInit( &cmd );
    10ba:	86 e7       	ldi	r24, 0x76	; 118
    10bc:	96 e0       	ldi	r25, 0x06	; 6
    10be:	0e 94 ef 00 	call	0x1de	; 0x1de <cmdInit>

	sei();
    10c2:	78 94       	sei
	
	cmdBuildAnswer( &cmd , ID_APPLICATION , DATA_TYP_STRING , 0 , 4 , (uint8_t*)"Boot");
    10c4:	0f 2e       	mov	r0, r31
    10c6:	f1 e1       	ldi	r31, 0x11	; 17
    10c8:	ef 2e       	mov	r14, r31
    10ca:	f1 e0       	ldi	r31, 0x01	; 1
    10cc:	ff 2e       	mov	r15, r31
    10ce:	f0 2d       	mov	r31, r0
    10d0:	04 e0       	ldi	r16, 0x04	; 4
    10d2:	20 e0       	ldi	r18, 0x00	; 0
    10d4:	44 e0       	ldi	r20, 0x04	; 4
    10d6:	6f ef       	ldi	r22, 0xFF	; 255
    10d8:	86 e7       	ldi	r24, 0x76	; 118
    10da:	96 e0       	ldi	r25, 0x06	; 6
    10dc:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
	cmdSendAnswer( &cmd );		
    10e0:	86 e7       	ldi	r24, 0x76	; 118
    10e2:	96 e0       	ldi	r25, 0x06	; 6
    10e4:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>

	cmdGetVersion( &cmd );
    10e8:	86 e7       	ldi	r24, 0x76	; 118
    10ea:	96 e0       	ldi	r25, 0x06	; 6
    10ec:	0e 94 af 06 	call	0xd5e	; 0xd5e <cmdGetVersion>
	
	sys.scrollIsRdy = 1;
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	80 93 62 06 	sts	0x0662, r24	; 0x800662 <sys+0x4>
			switch ( ParserState )
			{
				case 0:
				{
					cmdTab[cmd.MessageID].fnc( &cmd );
					if ( ++sys.cmdCounter % 10000 == 0 )
    10f6:	0f 2e       	mov	r0, r31
    10f8:	fe e5       	ldi	r31, 0x5E	; 94
    10fa:	cf 2e       	mov	r12, r31
    10fc:	f6 e0       	ldi	r31, 0x06	; 6
    10fe:	df 2e       	mov	r13, r31
    1100:	f0 2d       	mov	r31, r0
 			strcat( out , timeBcdToStr( rtc.hour , rtc.minute , rtc.second ) );
 			scrollMessage( out , 1500 , 0 );			
		}
		else
		{
			disp.dig[0] = ((sys.cmdCounter / 1000) % 10) + '0';
    1102:	0f 2e       	mov	r0, r31
    1104:	f0 e6       	ldi	r31, 0x60	; 96
    1106:	af 2e       	mov	r10, r31
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	bf 2e       	mov	r11, r31
    110c:	f0 2d       	mov	r31, r0
			sys.scrollIsRdy = 0; // Es darf wieder gescrollt werden
		}
		
		if ( DebugModeEnable == false )
		{
			char tmp[6] = "";
    110e:	ae 01       	movw	r20, r28
    1110:	4d 5f       	subi	r20, 0xFD	; 253
    1112:	5f 4f       	sbci	r21, 0xFF	; 255
    1114:	58 87       	std	Y+8, r21	; 0x08
    1116:	4f 83       	std	Y+7, r20	; 0x07
 			strcpy( out , buildTemperatureString( tmp , sts3x.actual , 0 ) );
    1118:	0f 2e       	mov	r0, r31
    111a:	f7 e6       	ldi	r31, 0x67	; 103
    111c:	2f 2e       	mov	r2, r31
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	3f 2e       	mov	r3, r31
    1122:	f0 2d       	mov	r31, r0
 			strcat( out , " - " );
    1124:	0f 2e       	mov	r0, r31
    1126:	f0 e2       	ldi	r31, 0x20	; 32
    1128:	6f 2e       	mov	r6, r31
    112a:	fd e2       	ldi	r31, 0x2D	; 45
    112c:	7f 2e       	mov	r7, r31
    112e:	f0 2d       	mov	r31, r0
    1130:	68 94       	set
    1132:	88 24       	eor	r8, r8
    1134:	85 f8       	bld	r8, 5
    1136:	91 2c       	mov	r9, r1
 			strcat( out , buildTemperatureString( tmp , tmp102.actual , 1 ) );
 			strcat( out , " - " );
 			strcat( out , timeBcdToStr( rtc.hour , rtc.minute , rtc.second ) );
    1138:	0f 2e       	mov	r0, r31
    113a:	f9 e6       	ldi	r31, 0x69	; 105
    113c:	4f 2e       	mov	r4, r31
    113e:	f6 e0       	ldi	r31, 0x06	; 6
    1140:	5f 2e       	mov	r5, r31
    1142:	f0 2d       	mov	r31, r0
	
	sys.scrollIsRdy = 1;

	while (1) 
    {	
		streamPtr	= uartReadRingBuff( streamIn );
    1144:	8e e9       	ldi	r24, 0x9E	; 158
    1146:	95 e0       	ldi	r25, 0x05	; 5
    1148:	0e 94 2d 05 	call	0xa5a	; 0xa5a <uartReadRingBuff>
    114c:	90 93 1f 06 	sts	0x061F, r25	; 0x80061f <streamPtr+0x1>
    1150:	80 93 1e 06 	sts	0x061E, r24	; 0x80061e <streamPtr>
		
		if ( streamPtr != NULL )
    1154:	00 97       	sbiw	r24, 0x00	; 0
    1156:	09 f4       	brne	.+2      	; 0x115a <main+0xd8>
    1158:	84 c0       	rjmp	.+264    	; 0x1262 <main+0x1e0>
		{
			uint8_t ParserState = cmdParse( streamPtr , &cmd );
    115a:	66 e7       	ldi	r22, 0x76	; 118
    115c:	76 e0       	ldi	r23, 0x06	; 6
    115e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <cmdParse>
			// 			cmdBuildAnswer(&LoopBack,LoopBack.MessageID,LoopBack.DataType,LoopBack.Exitcode,LoopBack.DataLength,LoopBack.DataPtr);
			// 			cmdSendAnswer(&LoopBack);
			
			cmd_t Answer;
			
			switch ( ParserState )
    1162:	81 30       	cpi	r24, 0x01	; 1
    1164:	09 f4       	brne	.+2      	; 0x1168 <main+0xe6>
    1166:	58 c0       	rjmp	.+176    	; 0x1218 <main+0x196>
    1168:	20 f0       	brcs	.+8      	; 0x1172 <main+0xf0>
    116a:	82 30       	cpi	r24, 0x02	; 2
    116c:	09 f4       	brne	.+2      	; 0x1170 <main+0xee>
    116e:	67 c0       	rjmp	.+206    	; 0x123e <main+0x1bc>
    1170:	78 c0       	rjmp	.+240    	; 0x1262 <main+0x1e0>
			{
				case 0:
				{
					cmdTab[cmd.MessageID].fnc( &cmd );
    1172:	e0 91 78 06 	lds	r30, 0x0678	; 0x800678 <cmd+0x2>
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	ee 0f       	add	r30, r30
    117a:	ff 1f       	adc	r31, r31
    117c:	e7 5d       	subi	r30, 0xD7	; 215
    117e:	fe 4f       	sbci	r31, 0xFE	; 254
    1180:	01 90       	ld	r0, Z+
    1182:	f0 81       	ld	r31, Z
    1184:	e0 2d       	mov	r30, r0
    1186:	86 e7       	ldi	r24, 0x76	; 118
    1188:	96 e0       	ldi	r25, 0x06	; 6
    118a:	09 95       	icall
					if ( ++sys.cmdCounter % 10000 == 0 )
    118c:	f6 01       	movw	r30, r12
    118e:	41 85       	ldd	r20, Z+9	; 0x09
    1190:	52 85       	ldd	r21, Z+10	; 0x0a
    1192:	4f 5f       	subi	r20, 0xFF	; 255
    1194:	5f 4f       	sbci	r21, 0xFF	; 255
    1196:	52 87       	std	Z+10, r21	; 0x0a
    1198:	41 87       	std	Z+9, r20	; 0x09
    119a:	9a 01       	movw	r18, r20
    119c:	32 95       	swap	r19
    119e:	22 95       	swap	r18
    11a0:	2f 70       	andi	r18, 0x0F	; 15
    11a2:	23 27       	eor	r18, r19
    11a4:	3f 70       	andi	r19, 0x0F	; 15
    11a6:	23 27       	eor	r18, r19
    11a8:	a7 e4       	ldi	r26, 0x47	; 71
    11aa:	b3 e0       	ldi	r27, 0x03	; 3
    11ac:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    11b0:	96 95       	lsr	r25
    11b2:	87 95       	ror	r24
    11b4:	96 95       	lsr	r25
    11b6:	87 95       	ror	r24
    11b8:	96 95       	lsr	r25
    11ba:	87 95       	ror	r24
    11bc:	60 e1       	ldi	r22, 0x10	; 16
    11be:	77 e2       	ldi	r23, 0x27	; 39
    11c0:	86 9f       	mul	r24, r22
    11c2:	90 01       	movw	r18, r0
    11c4:	87 9f       	mul	r24, r23
    11c6:	30 0d       	add	r19, r0
    11c8:	96 9f       	mul	r25, r22
    11ca:	30 0d       	add	r19, r0
    11cc:	11 24       	eor	r1, r1
    11ce:	42 17       	cp	r20, r18
    11d0:	53 07       	cpc	r21, r19
    11d2:	09 f0       	breq	.+2      	; 0x11d6 <main+0x154>
    11d4:	46 c0       	rjmp	.+140    	; 0x1262 <main+0x1e0>
					{
						DebugModeThousend++;
    11d6:	80 91 20 06 	lds	r24, 0x0620	; 0x800620 <DebugModeThousend>
    11da:	8f 5f       	subi	r24, 0xFF	; 255
    11dc:	80 93 20 06 	sts	0x0620, r24	; 0x800620 <DebugModeThousend>
						if ( DebugModeThousend < 7 )
    11e0:	87 30       	cpi	r24, 0x07	; 7
    11e2:	68 f4       	brcc	.+26     	; 0x11fe <main+0x17c>
						{
							RELAIS_PORT1_PORT |= ( 1 << ( ( DebugModeThousend ) + 1 ) );
    11e4:	22 b3       	in	r18, 0x12	; 18
    11e6:	8f 5f       	subi	r24, 0xFF	; 255
    11e8:	e1 e0       	ldi	r30, 0x01	; 1
    11ea:	f0 e0       	ldi	r31, 0x00	; 0
    11ec:	02 c0       	rjmp	.+4      	; 0x11f2 <main+0x170>
    11ee:	ee 0f       	add	r30, r30
    11f0:	ff 1f       	adc	r31, r31
    11f2:	8a 95       	dec	r24
    11f4:	e2 f7       	brpl	.-8      	; 0x11ee <main+0x16c>
    11f6:	cf 01       	movw	r24, r30
    11f8:	82 2b       	or	r24, r18
    11fa:	82 bb       	out	0x12, r24	; 18
    11fc:	32 c0       	rjmp	.+100    	; 0x1262 <main+0x1e0>
						}
						else
						{
							RELAIS_PORT2_PORT |= 1 << ( DebugModeThousend - 5 );
    11fe:	25 b3       	in	r18, 0x15	; 21
    1200:	85 50       	subi	r24, 0x05	; 5
    1202:	41 e0       	ldi	r20, 0x01	; 1
    1204:	50 e0       	ldi	r21, 0x00	; 0
    1206:	02 c0       	rjmp	.+4      	; 0x120c <main+0x18a>
    1208:	44 0f       	add	r20, r20
    120a:	55 1f       	adc	r21, r21
    120c:	8a 95       	dec	r24
    120e:	e2 f7       	brpl	.-8      	; 0x1208 <main+0x186>
    1210:	ca 01       	movw	r24, r20
    1212:	82 2b       	or	r24, r18
    1214:	85 bb       	out	0x15, r24	; 21
    1216:	25 c0       	rjmp	.+74     	; 0x1262 <main+0x1e0>
					}
				}break;
				
				case 1: // Kein Start gefunden
				{
					cmdBuildAnswer( &Answer , ID_APPLICATION , DATA_TYP_STRING , ParserState , 8 , (uint8_t*)"NO_START" );
    1218:	0f 2e       	mov	r0, r31
    121a:	f6 e1       	ldi	r31, 0x16	; 22
    121c:	ef 2e       	mov	r14, r31
    121e:	f1 e0       	ldi	r31, 0x01	; 1
    1220:	ff 2e       	mov	r15, r31
    1222:	f0 2d       	mov	r31, r0
    1224:	08 e0       	ldi	r16, 0x08	; 8
    1226:	21 e0       	ldi	r18, 0x01	; 1
    1228:	44 e0       	ldi	r20, 0x04	; 4
    122a:	6f ef       	ldi	r22, 0xFF	; 255
    122c:	ce 01       	movw	r24, r28
    122e:	01 96       	adiw	r24, 0x01	; 1
    1230:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
					cmdSendAnswer( &Answer );
    1234:	ce 01       	movw	r24, r28
    1236:	01 96       	adiw	r24, 0x01	; 1
    1238:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
				}break;
    123c:	12 c0       	rjmp	.+36     	; 0x1262 <main+0x1e0>
				
				case 2: // Checksummen fehler
				{
					cmdBuildAnswer( &Answer , ID_APPLICATION , DATA_TYP_STRING , ParserState , 9 , (uint8_t*)"CRC_ERROR" );
    123e:	0f 2e       	mov	r0, r31
    1240:	ff e1       	ldi	r31, 0x1F	; 31
    1242:	ef 2e       	mov	r14, r31
    1244:	f1 e0       	ldi	r31, 0x01	; 1
    1246:	ff 2e       	mov	r15, r31
    1248:	f0 2d       	mov	r31, r0
    124a:	09 e0       	ldi	r16, 0x09	; 9
    124c:	22 e0       	ldi	r18, 0x02	; 2
    124e:	44 e0       	ldi	r20, 0x04	; 4
    1250:	6f ef       	ldi	r22, 0xFF	; 255
    1252:	ce 01       	movw	r24, r28
    1254:	01 96       	adiw	r24, 0x01	; 1
    1256:	0e 94 bd 01 	call	0x37a	; 0x37a <cmdBuildAnswer>
					cmdSendAnswer( &Answer );
    125a:	ce 01       	movw	r24, r28
    125c:	01 96       	adiw	r24, 0x01	; 1
    125e:	0e 94 cb 01 	call	0x396	; 0x396 <cmdSendAnswer>
				}break;
			}	
		}

		if ( sys.scrollIsRdy && DebugModeEnable == false )
    1262:	f6 01       	movw	r30, r12
    1264:	84 81       	ldd	r24, Z+4	; 0x04
    1266:	88 23       	and	r24, r24
    1268:	c9 f0       	breq	.+50     	; 0x129c <main+0x21a>
    126a:	80 91 5d 06 	lds	r24, 0x065D	; 0x80065d <DebugModeEnable>
    126e:	81 11       	cpse	r24, r1
    1270:	5d c0       	rjmp	.+186    	; 0x132c <main+0x2aa>
		{
			sys.i2cBusy = 1; // Multiplexing unterbrechen
    1272:	80 81       	ld	r24, Z
    1274:	81 60       	ori	r24, 0x01	; 1
    1276:	80 83       	st	Z, r24
			
			sts3x.actual	= sts3xGetTemp();
    1278:	0e 94 34 04 	call	0x868	; 0x868 <sts3xGetTemp>
    127c:	f1 01       	movw	r30, r2
    127e:	82 83       	std	Z+2, r24	; 0x02
			tmp102.actual	= tmp102GetTemp();
    1280:	0e 94 74 04 	call	0x8e8	; 0x8e8 <tmp102GetTemp>
    1284:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <tmp102+0x2>
			checkTempSwell();
    1288:	0e 94 99 07 	call	0xf32	; 0xf32 <checkTempSwell>
			
			rtcGetData( &rtc );
    128c:	c2 01       	movw	r24, r4
    128e:	0e 94 70 03 	call	0x6e0	; 0x6e0 <rtcGetData>
			
			sys.i2cBusy = 0; // Multiplexing wieder freigeben
    1292:	f6 01       	movw	r30, r12
    1294:	80 81       	ld	r24, Z
    1296:	8e 7f       	andi	r24, 0xFE	; 254
    1298:	80 83       	st	Z, r24
			sys.scrollIsRdy = 0; // Es darf wieder gescrollt werden
    129a:	14 82       	std	Z+4, r1	; 0x04
		}
		
		if ( DebugModeEnable == false )
    129c:	80 91 5d 06 	lds	r24, 0x065D	; 0x80065d <DebugModeEnable>
    12a0:	81 11       	cpse	r24, r1
    12a2:	44 c0       	rjmp	.+136    	; 0x132c <main+0x2aa>
		{
			char tmp[6] = "";
    12a4:	1a 82       	std	Y+2, r1	; 0x02
    12a6:	19 82       	std	Y+1, r1	; 0x01
    12a8:	84 e0       	ldi	r24, 0x04	; 4
    12aa:	ef 81       	ldd	r30, Y+7	; 0x07
    12ac:	f8 85       	ldd	r31, Y+8	; 0x08
    12ae:	11 92       	st	Z+, r1
    12b0:	8a 95       	dec	r24
    12b2:	e9 f7       	brne	.-6      	; 0x12ae <main+0x22c>
 			strcpy( out , buildTemperatureString( tmp , sts3x.actual , 0 ) );
    12b4:	40 e0       	ldi	r20, 0x00	; 0
    12b6:	f1 01       	movw	r30, r2
    12b8:	62 81       	ldd	r22, Z+2	; 0x02
    12ba:	ce 01       	movw	r24, r28
    12bc:	01 96       	adiw	r24, 0x01	; 1
    12be:	0e 94 3f 02 	call	0x47e	; 0x47e <buildTemperatureString>
    12c2:	bc 01       	movw	r22, r24
    12c4:	81 e2       	ldi	r24, 0x21	; 33
    12c6:	96 e0       	ldi	r25, 0x06	; 6
    12c8:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <strcpy>
 			strcat( out , " - " );
    12cc:	01 e2       	ldi	r16, 0x21	; 33
    12ce:	16 e0       	ldi	r17, 0x06	; 6
    12d0:	f8 01       	movw	r30, r16
    12d2:	01 90       	ld	r0, Z+
    12d4:	00 20       	and	r0, r0
    12d6:	e9 f7       	brne	.-6      	; 0x12d2 <main+0x250>
    12d8:	31 97       	sbiw	r30, 0x01	; 1
    12da:	71 82       	std	Z+1, r7	; 0x01
    12dc:	60 82       	st	Z, r6
    12de:	93 82       	std	Z+3, r9	; 0x03
    12e0:	82 82       	std	Z+2, r8	; 0x02
 			strcat( out , buildTemperatureString( tmp , tmp102.actual , 1 ) );
    12e2:	41 e0       	ldi	r20, 0x01	; 1
    12e4:	60 91 6d 00 	lds	r22, 0x006D	; 0x80006d <tmp102+0x2>
    12e8:	ce 01       	movw	r24, r28
    12ea:	01 96       	adiw	r24, 0x01	; 1
    12ec:	0e 94 3f 02 	call	0x47e	; 0x47e <buildTemperatureString>
    12f0:	bc 01       	movw	r22, r24
    12f2:	c8 01       	movw	r24, r16
    12f4:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <strcat>
 			strcat( out , " - " );
    12f8:	f8 01       	movw	r30, r16
    12fa:	01 90       	ld	r0, Z+
    12fc:	00 20       	and	r0, r0
    12fe:	e9 f7       	brne	.-6      	; 0x12fa <main+0x278>
    1300:	31 97       	sbiw	r30, 0x01	; 1
    1302:	71 82       	std	Z+1, r7	; 0x01
    1304:	60 82       	st	Z, r6
    1306:	93 82       	std	Z+3, r9	; 0x03
    1308:	82 82       	std	Z+2, r8	; 0x02
 			strcat( out , timeBcdToStr( rtc.hour , rtc.minute , rtc.second ) );
    130a:	f2 01       	movw	r30, r4
    130c:	40 81       	ld	r20, Z
    130e:	61 81       	ldd	r22, Z+1	; 0x01
    1310:	82 81       	ldd	r24, Z+2	; 0x02
    1312:	0e 94 fe 01 	call	0x3fc	; 0x3fc <timeBcdToStr>
    1316:	bc 01       	movw	r22, r24
    1318:	c8 01       	movw	r24, r16
    131a:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <strcat>
 			scrollMessage( out , 1500 , 0 );			
    131e:	40 e0       	ldi	r20, 0x00	; 0
    1320:	6c ed       	ldi	r22, 0xDC	; 220
    1322:	75 e0       	ldi	r23, 0x05	; 5
    1324:	c8 01       	movw	r24, r16
    1326:	0e 94 d7 07 	call	0xfae	; 0xfae <scrollMessage>
    132a:	0c cf       	rjmp	.-488    	; 0x1144 <main+0xc2>
		}
		else
		{
			disp.dig[0] = ((sys.cmdCounter / 1000) % 10) + '0';
    132c:	f6 01       	movw	r30, r12
    132e:	21 85       	ldd	r18, Z+9	; 0x09
    1330:	32 85       	ldd	r19, Z+10	; 0x0a
    1332:	36 95       	lsr	r19
    1334:	27 95       	ror	r18
    1336:	36 95       	lsr	r19
    1338:	27 95       	ror	r18
    133a:	36 95       	lsr	r19
    133c:	27 95       	ror	r18
    133e:	a5 ec       	ldi	r26, 0xC5	; 197
    1340:	b0 e2       	ldi	r27, 0x20	; 32
    1342:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    1346:	ac 01       	movw	r20, r24
    1348:	52 95       	swap	r21
    134a:	42 95       	swap	r20
    134c:	4f 70       	andi	r20, 0x0F	; 15
    134e:	45 27       	eor	r20, r21
    1350:	5f 70       	andi	r21, 0x0F	; 15
    1352:	45 27       	eor	r20, r21
    1354:	9a 01       	movw	r18, r20
    1356:	ad ec       	ldi	r26, 0xCD	; 205
    1358:	bc ec       	ldi	r27, 0xCC	; 204
    135a:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    135e:	96 95       	lsr	r25
    1360:	87 95       	ror	r24
    1362:	96 95       	lsr	r25
    1364:	87 95       	ror	r24
    1366:	96 95       	lsr	r25
    1368:	87 95       	ror	r24
    136a:	9c 01       	movw	r18, r24
    136c:	22 0f       	add	r18, r18
    136e:	33 1f       	adc	r19, r19
    1370:	88 0f       	add	r24, r24
    1372:	99 1f       	adc	r25, r25
    1374:	88 0f       	add	r24, r24
    1376:	99 1f       	adc	r25, r25
    1378:	88 0f       	add	r24, r24
    137a:	99 1f       	adc	r25, r25
    137c:	82 0f       	add	r24, r18
    137e:	93 1f       	adc	r25, r19
    1380:	48 1b       	sub	r20, r24
    1382:	59 0b       	sbc	r21, r25
    1384:	40 5d       	subi	r20, 0xD0	; 208
    1386:	f5 01       	movw	r30, r10
    1388:	40 83       	st	Z, r20
			disp.dig[1] = ((sys.cmdCounter / 100) % 10) + '0';
    138a:	f6 01       	movw	r30, r12
    138c:	21 85       	ldd	r18, Z+9	; 0x09
    138e:	32 85       	ldd	r19, Z+10	; 0x0a
    1390:	36 95       	lsr	r19
    1392:	27 95       	ror	r18
    1394:	36 95       	lsr	r19
    1396:	27 95       	ror	r18
    1398:	ab e7       	ldi	r26, 0x7B	; 123
    139a:	b4 e1       	ldi	r27, 0x14	; 20
    139c:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    13a0:	ac 01       	movw	r20, r24
    13a2:	56 95       	lsr	r21
    13a4:	47 95       	ror	r20
    13a6:	9a 01       	movw	r18, r20
    13a8:	ad ec       	ldi	r26, 0xCD	; 205
    13aa:	bc ec       	ldi	r27, 0xCC	; 204
    13ac:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    13b0:	96 95       	lsr	r25
    13b2:	87 95       	ror	r24
    13b4:	96 95       	lsr	r25
    13b6:	87 95       	ror	r24
    13b8:	96 95       	lsr	r25
    13ba:	87 95       	ror	r24
    13bc:	9c 01       	movw	r18, r24
    13be:	22 0f       	add	r18, r18
    13c0:	33 1f       	adc	r19, r19
    13c2:	88 0f       	add	r24, r24
    13c4:	99 1f       	adc	r25, r25
    13c6:	88 0f       	add	r24, r24
    13c8:	99 1f       	adc	r25, r25
    13ca:	88 0f       	add	r24, r24
    13cc:	99 1f       	adc	r25, r25
    13ce:	82 0f       	add	r24, r18
    13d0:	93 1f       	adc	r25, r19
    13d2:	48 1b       	sub	r20, r24
    13d4:	59 0b       	sbc	r21, r25
    13d6:	40 5d       	subi	r20, 0xD0	; 208
    13d8:	f5 01       	movw	r30, r10
    13da:	41 83       	std	Z+1, r20	; 0x01
			disp.dig[2] = ((sys.cmdCounter / 10) % 10) + '0';
    13dc:	f6 01       	movw	r30, r12
    13de:	21 85       	ldd	r18, Z+9	; 0x09
    13e0:	32 85       	ldd	r19, Z+10	; 0x0a
    13e2:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    13e6:	ac 01       	movw	r20, r24
    13e8:	56 95       	lsr	r21
    13ea:	47 95       	ror	r20
    13ec:	56 95       	lsr	r21
    13ee:	47 95       	ror	r20
    13f0:	56 95       	lsr	r21
    13f2:	47 95       	ror	r20
    13f4:	9a 01       	movw	r18, r20
    13f6:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    13fa:	96 95       	lsr	r25
    13fc:	87 95       	ror	r24
    13fe:	96 95       	lsr	r25
    1400:	87 95       	ror	r24
    1402:	96 95       	lsr	r25
    1404:	87 95       	ror	r24
    1406:	9c 01       	movw	r18, r24
    1408:	22 0f       	add	r18, r18
    140a:	33 1f       	adc	r19, r19
    140c:	88 0f       	add	r24, r24
    140e:	99 1f       	adc	r25, r25
    1410:	88 0f       	add	r24, r24
    1412:	99 1f       	adc	r25, r25
    1414:	88 0f       	add	r24, r24
    1416:	99 1f       	adc	r25, r25
    1418:	82 0f       	add	r24, r18
    141a:	93 1f       	adc	r25, r19
    141c:	48 1b       	sub	r20, r24
    141e:	59 0b       	sbc	r21, r25
    1420:	40 5d       	subi	r20, 0xD0	; 208
    1422:	f5 01       	movw	r30, r10
    1424:	42 83       	std	Z+2, r20	; 0x02
			disp.dig[3] = (sys.cmdCounter  % 10) + '0';
    1426:	f6 01       	movw	r30, r12
    1428:	41 85       	ldd	r20, Z+9	; 0x09
    142a:	52 85       	ldd	r21, Z+10	; 0x0a
    142c:	9a 01       	movw	r18, r20
    142e:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__umulhisi3>
    1432:	96 95       	lsr	r25
    1434:	87 95       	ror	r24
    1436:	96 95       	lsr	r25
    1438:	87 95       	ror	r24
    143a:	96 95       	lsr	r25
    143c:	87 95       	ror	r24
    143e:	9c 01       	movw	r18, r24
    1440:	22 0f       	add	r18, r18
    1442:	33 1f       	adc	r19, r19
    1444:	88 0f       	add	r24, r24
    1446:	99 1f       	adc	r25, r25
    1448:	88 0f       	add	r24, r24
    144a:	99 1f       	adc	r25, r25
    144c:	88 0f       	add	r24, r24
    144e:	99 1f       	adc	r25, r25
    1450:	82 0f       	add	r24, r18
    1452:	93 1f       	adc	r25, r19
    1454:	48 1b       	sub	r20, r24
    1456:	59 0b       	sbc	r21, r25
    1458:	40 5d       	subi	r20, 0xD0	; 208
    145a:	f5 01       	movw	r30, r10
    145c:	43 83       	std	Z+3, r20	; 0x03
    145e:	72 ce       	rjmp	.-796    	; 0x1144 <main+0xc2>

00001460 <__vector_7>:
    }
}

/* live the CPU?*/
ISR(TIMER1_COMPA_vect)
{
    1460:	1f 92       	push	r1
    1462:	0f 92       	push	r0
    1464:	0f b6       	in	r0, 0x3f	; 63
    1466:	0f 92       	push	r0
    1468:	11 24       	eor	r1, r1
    146a:	2f 93       	push	r18
    146c:	3f 93       	push	r19
    146e:	4f 93       	push	r20
    1470:	5f 93       	push	r21
    1472:	6f 93       	push	r22
    1474:	7f 93       	push	r23
    1476:	8f 93       	push	r24
    1478:	9f 93       	push	r25
    147a:	af 93       	push	r26
    147c:	bf 93       	push	r27
    147e:	ef 93       	push	r30
    1480:	ff 93       	push	r31
	static uint32_t stateLED = 0;
	sys.scroll++;
    1482:	ee e5       	ldi	r30, 0x5E	; 94
    1484:	f6 e0       	ldi	r31, 0x06	; 6
    1486:	82 81       	ldd	r24, Z+2	; 0x02
    1488:	93 81       	ldd	r25, Z+3	; 0x03
    148a:	01 96       	adiw	r24, 0x01	; 1
    148c:	93 83       	std	Z+3, r25	; 0x03
    148e:	82 83       	std	Z+2, r24	; 0x02
	
	/*
	*	Status Anzeige
	*/
	stateLED = checkMaxValue( ++stateLED , 10e3 );
    1490:	80 91 9a 05 	lds	r24, 0x059A	; 0x80059a <stateLED.2723>
    1494:	90 91 9b 05 	lds	r25, 0x059B	; 0x80059b <stateLED.2723+0x1>
    1498:	a0 91 9c 05 	lds	r26, 0x059C	; 0x80059c <stateLED.2723+0x2>
    149c:	b0 91 9d 05 	lds	r27, 0x059D	; 0x80059d <stateLED.2723+0x3>
    14a0:	01 96       	adiw	r24, 0x01	; 1
    14a2:	a1 1d       	adc	r26, r1
    14a4:	b1 1d       	adc	r27, r1
	OCR1A   = ( (uint16_t)( F_CPU / 1 / 8000 ) );	
}

uint16_t checkMaxValue( uint16_t val , uint16_t max )
{
	if( val > max )
    14a6:	81 31       	cpi	r24, 0x11	; 17
    14a8:	27 e2       	ldi	r18, 0x27	; 39
    14aa:	92 07       	cpc	r25, r18
    14ac:	08 f0       	brcs	.+2      	; 0x14b0 <__vector_7+0x50>
    14ae:	62 c0       	rjmp	.+196    	; 0x1574 <__vector_7+0x114>
    14b0:	aa 27       	eor	r26, r26
    14b2:	bb 27       	eor	r27, r27
	sys.scroll++;
	
	/*
	*	Status Anzeige
	*/
	stateLED = checkMaxValue( ++stateLED , 10e3 );
    14b4:	80 93 9a 05 	sts	0x059A, r24	; 0x80059a <stateLED.2723>
    14b8:	90 93 9b 05 	sts	0x059B, r25	; 0x80059b <stateLED.2723+0x1>
    14bc:	a0 93 9c 05 	sts	0x059C, r26	; 0x80059c <stateLED.2723+0x2>
    14c0:	b0 93 9d 05 	sts	0x059D, r27	; 0x80059d <stateLED.2723+0x3>
	
	if ( stateLED <= 200 )
    14c4:	89 3c       	cpi	r24, 0xC9	; 201
    14c6:	91 05       	cpc	r25, r1
    14c8:	a1 05       	cpc	r26, r1
    14ca:	b1 05       	cpc	r27, r1
    14cc:	10 f4       	brcc	.+4      	; 0x14d2 <__vector_7+0x72>
	{
		BC(LED_HEARTBEAT_PORT,LED_HEARTBEAT_bp);
    14ce:	c7 98       	cbi	0x18, 7	; 24
    14d0:	24 c0       	rjmp	.+72     	; 0x151a <__vector_7+0xba>
	}
	else if ( ( stateLED >= 400 ) && ( stateLED <= 600 ) )
    14d2:	ac 01       	movw	r20, r24
    14d4:	bd 01       	movw	r22, r26
    14d6:	40 59       	subi	r20, 0x90	; 144
    14d8:	51 40       	sbci	r21, 0x01	; 1
    14da:	61 09       	sbc	r22, r1
    14dc:	71 09       	sbc	r23, r1
    14de:	49 3c       	cpi	r20, 0xC9	; 201
    14e0:	51 05       	cpc	r21, r1
    14e2:	61 05       	cpc	r22, r1
    14e4:	71 05       	cpc	r23, r1
    14e6:	10 f4       	brcc	.+4      	; 0x14ec <__vector_7+0x8c>
	{
		BS(LED_HEARTBEAT_PORT,LED_HEARTBEAT_bp);
    14e8:	c7 9a       	sbi	0x18, 7	; 24
    14ea:	17 c0       	rjmp	.+46     	; 0x151a <__vector_7+0xba>
	}
	else if ( ( stateLED >= 1000 ) && ( stateLED <= 1400 ) )
    14ec:	ac 01       	movw	r20, r24
    14ee:	bd 01       	movw	r22, r26
    14f0:	48 5e       	subi	r20, 0xE8	; 232
    14f2:	53 40       	sbci	r21, 0x03	; 3
    14f4:	61 09       	sbc	r22, r1
    14f6:	71 09       	sbc	r23, r1
    14f8:	41 39       	cpi	r20, 0x91	; 145
    14fa:	51 40       	sbci	r21, 0x01	; 1
    14fc:	61 05       	cpc	r22, r1
    14fe:	71 05       	cpc	r23, r1
    1500:	10 f4       	brcc	.+4      	; 0x1506 <__vector_7+0xa6>
	{
		BC(LED_HEARTBEAT_PORT,LED_HEARTBEAT_bp);
    1502:	c7 98       	cbi	0x18, 7	; 24
    1504:	0a c0       	rjmp	.+20     	; 0x151a <__vector_7+0xba>
	}
	else if ( ( stateLED >= 1600 ) && ( stateLED <= 1800 ) )
    1506:	80 54       	subi	r24, 0x40	; 64
    1508:	96 40       	sbci	r25, 0x06	; 6
    150a:	a1 09       	sbc	r26, r1
    150c:	b1 09       	sbc	r27, r1
    150e:	89 3c       	cpi	r24, 0xC9	; 201
    1510:	91 05       	cpc	r25, r1
    1512:	a1 05       	cpc	r26, r1
    1514:	b1 05       	cpc	r27, r1
    1516:	08 f4       	brcc	.+2      	; 0x151a <__vector_7+0xba>
	{
		BS(LED_HEARTBEAT_PORT,LED_HEARTBEAT_bp);
    1518:	c7 9a       	sbi	0x18, 7	; 24
	}
	
	/*
	*	Drehencoder auswertung.
	*/
	encoder.Last = ( ( encoder.Last << 2 ) & 0x0F );
    151a:	e0 e7       	ldi	r30, 0x70	; 112
    151c:	f0 e0       	ldi	r31, 0x00	; 0
    151e:	81 89       	ldd	r24, Z+17	; 0x11
    1520:	24 e0       	ldi	r18, 0x04	; 4
    1522:	82 02       	muls	r24, r18
    1524:	c0 01       	movw	r24, r0
    1526:	11 24       	eor	r1, r1
    1528:	8f 70       	andi	r24, 0x0F	; 15
    152a:	81 8b       	std	Z+17, r24	; 0x11
	if (ENC_PIN & 1<<ENC_B)
    152c:	c9 9b       	sbis	0x19, 1	; 25
    152e:	03 c0       	rjmp	.+6      	; 0x1536 <__vector_7+0xd6>
	{
		encoder.Last |= 2;
    1530:	81 89       	ldd	r24, Z+17	; 0x11
    1532:	82 60       	ori	r24, 0x02	; 2
    1534:	81 8b       	std	Z+17, r24	; 0x11
	}
	if (ENC_PIN & 1<<ENC_A)
    1536:	ca 9b       	sbis	0x19, 2	; 25
    1538:	05 c0       	rjmp	.+10     	; 0x1544 <__vector_7+0xe4>
	{
		encoder.Last |= 1;
    153a:	e0 e7       	ldi	r30, 0x70	; 112
    153c:	f0 e0       	ldi	r31, 0x00	; 0
    153e:	81 89       	ldd	r24, Z+17	; 0x11
    1540:	81 60       	ori	r24, 0x01	; 1
    1542:	81 8b       	std	Z+17, r24	; 0x11
	} 	
	encoder.result += encoder.Table[encoder.Last];	
    1544:	a0 e7       	ldi	r26, 0x70	; 112
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	51 96       	adiw	r26, 0x11	; 17
    154a:	ec 91       	ld	r30, X
    154c:	51 97       	sbiw	r26, 0x11	; 17
    154e:	0e 2e       	mov	r0, r30
    1550:	00 0c       	add	r0, r0
    1552:	ff 0b       	sbc	r31, r31
    1554:	e0 59       	subi	r30, 0x90	; 144
    1556:	ff 4f       	sbci	r31, 0xFF	; 255
    1558:	80 81       	ld	r24, Z
    155a:	50 96       	adiw	r26, 0x10	; 16
    155c:	9c 91       	ld	r25, X
    155e:	50 97       	sbiw	r26, 0x10	; 16
    1560:	89 0f       	add	r24, r25
    1562:	50 96       	adiw	r26, 0x10	; 16
    1564:	8c 93       	st	X, r24
		
	if ( !sys.i2cBusy )
    1566:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <sys>
    156a:	80 fd       	sbrc	r24, 0
    156c:	0c c0       	rjmp	.+24     	; 0x1586 <__vector_7+0x126>
	{
		muxDigits();
    156e:	0e 94 97 02 	call	0x52e	; 0x52e <muxDigits>
	}
    1572:	09 c0       	rjmp	.+18     	; 0x1586 <__vector_7+0x126>
	sys.scroll++;
	
	/*
	*	Status Anzeige
	*/
	stateLED = checkMaxValue( ++stateLED , 10e3 );
    1574:	10 92 9a 05 	sts	0x059A, r1	; 0x80059a <stateLED.2723>
    1578:	10 92 9b 05 	sts	0x059B, r1	; 0x80059b <stateLED.2723+0x1>
    157c:	10 92 9c 05 	sts	0x059C, r1	; 0x80059c <stateLED.2723+0x2>
    1580:	10 92 9d 05 	sts	0x059D, r1	; 0x80059d <stateLED.2723+0x3>
    1584:	a4 cf       	rjmp	.-184    	; 0x14ce <__vector_7+0x6e>
		
	if ( !sys.i2cBusy )
	{
		muxDigits();
	}
    1586:	ff 91       	pop	r31
    1588:	ef 91       	pop	r30
    158a:	bf 91       	pop	r27
    158c:	af 91       	pop	r26
    158e:	9f 91       	pop	r25
    1590:	8f 91       	pop	r24
    1592:	7f 91       	pop	r23
    1594:	6f 91       	pop	r22
    1596:	5f 91       	pop	r21
    1598:	4f 91       	pop	r20
    159a:	3f 91       	pop	r19
    159c:	2f 91       	pop	r18
    159e:	0f 90       	pop	r0
    15a0:	0f be       	out	0x3f, r0	; 63
    15a2:	0f 90       	pop	r0
    15a4:	1f 90       	pop	r1
    15a6:	18 95       	reti

000015a8 <__subsf3>:
    15a8:	50 58       	subi	r21, 0x80	; 128

000015aa <__addsf3>:
    15aa:	bb 27       	eor	r27, r27
    15ac:	aa 27       	eor	r26, r26
    15ae:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <__addsf3x>
    15b2:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__fp_round>
    15b6:	0e 94 2f 0c 	call	0x185e	; 0x185e <__fp_pscA>
    15ba:	38 f0       	brcs	.+14     	; 0x15ca <__addsf3+0x20>
    15bc:	0e 94 36 0c 	call	0x186c	; 0x186c <__fp_pscB>
    15c0:	20 f0       	brcs	.+8      	; 0x15ca <__addsf3+0x20>
    15c2:	39 f4       	brne	.+14     	; 0x15d2 <__addsf3+0x28>
    15c4:	9f 3f       	cpi	r25, 0xFF	; 255
    15c6:	19 f4       	brne	.+6      	; 0x15ce <__addsf3+0x24>
    15c8:	26 f4       	brtc	.+8      	; 0x15d2 <__addsf3+0x28>
    15ca:	0c 94 2c 0c 	jmp	0x1858	; 0x1858 <__fp_nan>
    15ce:	0e f4       	brtc	.+2      	; 0x15d2 <__addsf3+0x28>
    15d0:	e0 95       	com	r30
    15d2:	e7 fb       	bst	r30, 7
    15d4:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__fp_inf>

000015d8 <__addsf3x>:
    15d8:	e9 2f       	mov	r30, r25
    15da:	0e 94 4e 0c 	call	0x189c	; 0x189c <__fp_split3>
    15de:	58 f3       	brcs	.-42     	; 0x15b6 <__addsf3+0xc>
    15e0:	ba 17       	cp	r27, r26
    15e2:	62 07       	cpc	r22, r18
    15e4:	73 07       	cpc	r23, r19
    15e6:	84 07       	cpc	r24, r20
    15e8:	95 07       	cpc	r25, r21
    15ea:	20 f0       	brcs	.+8      	; 0x15f4 <__addsf3x+0x1c>
    15ec:	79 f4       	brne	.+30     	; 0x160c <__addsf3x+0x34>
    15ee:	a6 f5       	brtc	.+104    	; 0x1658 <__addsf3x+0x80>
    15f0:	0c 94 70 0c 	jmp	0x18e0	; 0x18e0 <__fp_zero>
    15f4:	0e f4       	brtc	.+2      	; 0x15f8 <__addsf3x+0x20>
    15f6:	e0 95       	com	r30
    15f8:	0b 2e       	mov	r0, r27
    15fa:	ba 2f       	mov	r27, r26
    15fc:	a0 2d       	mov	r26, r0
    15fe:	0b 01       	movw	r0, r22
    1600:	b9 01       	movw	r22, r18
    1602:	90 01       	movw	r18, r0
    1604:	0c 01       	movw	r0, r24
    1606:	ca 01       	movw	r24, r20
    1608:	a0 01       	movw	r20, r0
    160a:	11 24       	eor	r1, r1
    160c:	ff 27       	eor	r31, r31
    160e:	59 1b       	sub	r21, r25
    1610:	99 f0       	breq	.+38     	; 0x1638 <__addsf3x+0x60>
    1612:	59 3f       	cpi	r21, 0xF9	; 249
    1614:	50 f4       	brcc	.+20     	; 0x162a <__addsf3x+0x52>
    1616:	50 3e       	cpi	r21, 0xE0	; 224
    1618:	68 f1       	brcs	.+90     	; 0x1674 <__addsf3x+0x9c>
    161a:	1a 16       	cp	r1, r26
    161c:	f0 40       	sbci	r31, 0x00	; 0
    161e:	a2 2f       	mov	r26, r18
    1620:	23 2f       	mov	r18, r19
    1622:	34 2f       	mov	r19, r20
    1624:	44 27       	eor	r20, r20
    1626:	58 5f       	subi	r21, 0xF8	; 248
    1628:	f3 cf       	rjmp	.-26     	; 0x1610 <__addsf3x+0x38>
    162a:	46 95       	lsr	r20
    162c:	37 95       	ror	r19
    162e:	27 95       	ror	r18
    1630:	a7 95       	ror	r26
    1632:	f0 40       	sbci	r31, 0x00	; 0
    1634:	53 95       	inc	r21
    1636:	c9 f7       	brne	.-14     	; 0x162a <__addsf3x+0x52>
    1638:	7e f4       	brtc	.+30     	; 0x1658 <__addsf3x+0x80>
    163a:	1f 16       	cp	r1, r31
    163c:	ba 0b       	sbc	r27, r26
    163e:	62 0b       	sbc	r22, r18
    1640:	73 0b       	sbc	r23, r19
    1642:	84 0b       	sbc	r24, r20
    1644:	ba f0       	brmi	.+46     	; 0x1674 <__addsf3x+0x9c>
    1646:	91 50       	subi	r25, 0x01	; 1
    1648:	a1 f0       	breq	.+40     	; 0x1672 <__addsf3x+0x9a>
    164a:	ff 0f       	add	r31, r31
    164c:	bb 1f       	adc	r27, r27
    164e:	66 1f       	adc	r22, r22
    1650:	77 1f       	adc	r23, r23
    1652:	88 1f       	adc	r24, r24
    1654:	c2 f7       	brpl	.-16     	; 0x1646 <__addsf3x+0x6e>
    1656:	0e c0       	rjmp	.+28     	; 0x1674 <__addsf3x+0x9c>
    1658:	ba 0f       	add	r27, r26
    165a:	62 1f       	adc	r22, r18
    165c:	73 1f       	adc	r23, r19
    165e:	84 1f       	adc	r24, r20
    1660:	48 f4       	brcc	.+18     	; 0x1674 <__addsf3x+0x9c>
    1662:	87 95       	ror	r24
    1664:	77 95       	ror	r23
    1666:	67 95       	ror	r22
    1668:	b7 95       	ror	r27
    166a:	f7 95       	ror	r31
    166c:	9e 3f       	cpi	r25, 0xFE	; 254
    166e:	08 f0       	brcs	.+2      	; 0x1672 <__addsf3x+0x9a>
    1670:	b0 cf       	rjmp	.-160    	; 0x15d2 <__addsf3+0x28>
    1672:	93 95       	inc	r25
    1674:	88 0f       	add	r24, r24
    1676:	08 f0       	brcs	.+2      	; 0x167a <__addsf3x+0xa2>
    1678:	99 27       	eor	r25, r25
    167a:	ee 0f       	add	r30, r30
    167c:	97 95       	ror	r25
    167e:	87 95       	ror	r24
    1680:	08 95       	ret

00001682 <__divsf3>:
    1682:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__divsf3x>
    1686:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__fp_round>
    168a:	0e 94 36 0c 	call	0x186c	; 0x186c <__fp_pscB>
    168e:	58 f0       	brcs	.+22     	; 0x16a6 <__divsf3+0x24>
    1690:	0e 94 2f 0c 	call	0x185e	; 0x185e <__fp_pscA>
    1694:	40 f0       	brcs	.+16     	; 0x16a6 <__divsf3+0x24>
    1696:	29 f4       	brne	.+10     	; 0x16a2 <__divsf3+0x20>
    1698:	5f 3f       	cpi	r21, 0xFF	; 255
    169a:	29 f0       	breq	.+10     	; 0x16a6 <__divsf3+0x24>
    169c:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__fp_inf>
    16a0:	51 11       	cpse	r21, r1
    16a2:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__fp_szero>
    16a6:	0c 94 2c 0c 	jmp	0x1858	; 0x1858 <__fp_nan>

000016aa <__divsf3x>:
    16aa:	0e 94 4e 0c 	call	0x189c	; 0x189c <__fp_split3>
    16ae:	68 f3       	brcs	.-38     	; 0x168a <__divsf3+0x8>

000016b0 <__divsf3_pse>:
    16b0:	99 23       	and	r25, r25
    16b2:	b1 f3       	breq	.-20     	; 0x16a0 <__divsf3+0x1e>
    16b4:	55 23       	and	r21, r21
    16b6:	91 f3       	breq	.-28     	; 0x169c <__divsf3+0x1a>
    16b8:	95 1b       	sub	r25, r21
    16ba:	55 0b       	sbc	r21, r21
    16bc:	bb 27       	eor	r27, r27
    16be:	aa 27       	eor	r26, r26
    16c0:	62 17       	cp	r22, r18
    16c2:	73 07       	cpc	r23, r19
    16c4:	84 07       	cpc	r24, r20
    16c6:	38 f0       	brcs	.+14     	; 0x16d6 <__divsf3_pse+0x26>
    16c8:	9f 5f       	subi	r25, 0xFF	; 255
    16ca:	5f 4f       	sbci	r21, 0xFF	; 255
    16cc:	22 0f       	add	r18, r18
    16ce:	33 1f       	adc	r19, r19
    16d0:	44 1f       	adc	r20, r20
    16d2:	aa 1f       	adc	r26, r26
    16d4:	a9 f3       	breq	.-22     	; 0x16c0 <__divsf3_pse+0x10>
    16d6:	35 d0       	rcall	.+106    	; 0x1742 <__divsf3_pse+0x92>
    16d8:	0e 2e       	mov	r0, r30
    16da:	3a f0       	brmi	.+14     	; 0x16ea <__divsf3_pse+0x3a>
    16dc:	e0 e8       	ldi	r30, 0x80	; 128
    16de:	32 d0       	rcall	.+100    	; 0x1744 <__divsf3_pse+0x94>
    16e0:	91 50       	subi	r25, 0x01	; 1
    16e2:	50 40       	sbci	r21, 0x00	; 0
    16e4:	e6 95       	lsr	r30
    16e6:	00 1c       	adc	r0, r0
    16e8:	ca f7       	brpl	.-14     	; 0x16dc <__divsf3_pse+0x2c>
    16ea:	2b d0       	rcall	.+86     	; 0x1742 <__divsf3_pse+0x92>
    16ec:	fe 2f       	mov	r31, r30
    16ee:	29 d0       	rcall	.+82     	; 0x1742 <__divsf3_pse+0x92>
    16f0:	66 0f       	add	r22, r22
    16f2:	77 1f       	adc	r23, r23
    16f4:	88 1f       	adc	r24, r24
    16f6:	bb 1f       	adc	r27, r27
    16f8:	26 17       	cp	r18, r22
    16fa:	37 07       	cpc	r19, r23
    16fc:	48 07       	cpc	r20, r24
    16fe:	ab 07       	cpc	r26, r27
    1700:	b0 e8       	ldi	r27, 0x80	; 128
    1702:	09 f0       	breq	.+2      	; 0x1706 <__divsf3_pse+0x56>
    1704:	bb 0b       	sbc	r27, r27
    1706:	80 2d       	mov	r24, r0
    1708:	bf 01       	movw	r22, r30
    170a:	ff 27       	eor	r31, r31
    170c:	93 58       	subi	r25, 0x83	; 131
    170e:	5f 4f       	sbci	r21, 0xFF	; 255
    1710:	3a f0       	brmi	.+14     	; 0x1720 <__divsf3_pse+0x70>
    1712:	9e 3f       	cpi	r25, 0xFE	; 254
    1714:	51 05       	cpc	r21, r1
    1716:	78 f0       	brcs	.+30     	; 0x1736 <__divsf3_pse+0x86>
    1718:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__fp_inf>
    171c:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__fp_szero>
    1720:	5f 3f       	cpi	r21, 0xFF	; 255
    1722:	e4 f3       	brlt	.-8      	; 0x171c <__divsf3_pse+0x6c>
    1724:	98 3e       	cpi	r25, 0xE8	; 232
    1726:	d4 f3       	brlt	.-12     	; 0x171c <__divsf3_pse+0x6c>
    1728:	86 95       	lsr	r24
    172a:	77 95       	ror	r23
    172c:	67 95       	ror	r22
    172e:	b7 95       	ror	r27
    1730:	f7 95       	ror	r31
    1732:	9f 5f       	subi	r25, 0xFF	; 255
    1734:	c9 f7       	brne	.-14     	; 0x1728 <__divsf3_pse+0x78>
    1736:	88 0f       	add	r24, r24
    1738:	91 1d       	adc	r25, r1
    173a:	96 95       	lsr	r25
    173c:	87 95       	ror	r24
    173e:	97 f9       	bld	r25, 7
    1740:	08 95       	ret
    1742:	e1 e0       	ldi	r30, 0x01	; 1
    1744:	66 0f       	add	r22, r22
    1746:	77 1f       	adc	r23, r23
    1748:	88 1f       	adc	r24, r24
    174a:	bb 1f       	adc	r27, r27
    174c:	62 17       	cp	r22, r18
    174e:	73 07       	cpc	r23, r19
    1750:	84 07       	cpc	r24, r20
    1752:	ba 07       	cpc	r27, r26
    1754:	20 f0       	brcs	.+8      	; 0x175e <__divsf3_pse+0xae>
    1756:	62 1b       	sub	r22, r18
    1758:	73 0b       	sbc	r23, r19
    175a:	84 0b       	sbc	r24, r20
    175c:	ba 0b       	sbc	r27, r26
    175e:	ee 1f       	adc	r30, r30
    1760:	88 f7       	brcc	.-30     	; 0x1744 <__divsf3_pse+0x94>
    1762:	e0 95       	com	r30
    1764:	08 95       	ret

00001766 <__fixsfsi>:
    1766:	0e 94 ba 0b 	call	0x1774	; 0x1774 <__fixunssfsi>
    176a:	68 94       	set
    176c:	b1 11       	cpse	r27, r1
    176e:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__fp_szero>
    1772:	08 95       	ret

00001774 <__fixunssfsi>:
    1774:	0e 94 56 0c 	call	0x18ac	; 0x18ac <__fp_splitA>
    1778:	88 f0       	brcs	.+34     	; 0x179c <__fixunssfsi+0x28>
    177a:	9f 57       	subi	r25, 0x7F	; 127
    177c:	98 f0       	brcs	.+38     	; 0x17a4 <__fixunssfsi+0x30>
    177e:	b9 2f       	mov	r27, r25
    1780:	99 27       	eor	r25, r25
    1782:	b7 51       	subi	r27, 0x17	; 23
    1784:	b0 f0       	brcs	.+44     	; 0x17b2 <__fixunssfsi+0x3e>
    1786:	e1 f0       	breq	.+56     	; 0x17c0 <__fixunssfsi+0x4c>
    1788:	66 0f       	add	r22, r22
    178a:	77 1f       	adc	r23, r23
    178c:	88 1f       	adc	r24, r24
    178e:	99 1f       	adc	r25, r25
    1790:	1a f0       	brmi	.+6      	; 0x1798 <__fixunssfsi+0x24>
    1792:	ba 95       	dec	r27
    1794:	c9 f7       	brne	.-14     	; 0x1788 <__fixunssfsi+0x14>
    1796:	14 c0       	rjmp	.+40     	; 0x17c0 <__fixunssfsi+0x4c>
    1798:	b1 30       	cpi	r27, 0x01	; 1
    179a:	91 f0       	breq	.+36     	; 0x17c0 <__fixunssfsi+0x4c>
    179c:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <__fp_zero>
    17a0:	b1 e0       	ldi	r27, 0x01	; 1
    17a2:	08 95       	ret
    17a4:	0c 94 70 0c 	jmp	0x18e0	; 0x18e0 <__fp_zero>
    17a8:	67 2f       	mov	r22, r23
    17aa:	78 2f       	mov	r23, r24
    17ac:	88 27       	eor	r24, r24
    17ae:	b8 5f       	subi	r27, 0xF8	; 248
    17b0:	39 f0       	breq	.+14     	; 0x17c0 <__fixunssfsi+0x4c>
    17b2:	b9 3f       	cpi	r27, 0xF9	; 249
    17b4:	cc f3       	brlt	.-14     	; 0x17a8 <__fixunssfsi+0x34>
    17b6:	86 95       	lsr	r24
    17b8:	77 95       	ror	r23
    17ba:	67 95       	ror	r22
    17bc:	b3 95       	inc	r27
    17be:	d9 f7       	brne	.-10     	; 0x17b6 <__fixunssfsi+0x42>
    17c0:	3e f4       	brtc	.+14     	; 0x17d0 <__fixunssfsi+0x5c>
    17c2:	90 95       	com	r25
    17c4:	80 95       	com	r24
    17c6:	70 95       	com	r23
    17c8:	61 95       	neg	r22
    17ca:	7f 4f       	sbci	r23, 0xFF	; 255
    17cc:	8f 4f       	sbci	r24, 0xFF	; 255
    17ce:	9f 4f       	sbci	r25, 0xFF	; 255
    17d0:	08 95       	ret

000017d2 <__floatunsisf>:
    17d2:	e8 94       	clt
    17d4:	09 c0       	rjmp	.+18     	; 0x17e8 <__floatsisf+0x12>

000017d6 <__floatsisf>:
    17d6:	97 fb       	bst	r25, 7
    17d8:	3e f4       	brtc	.+14     	; 0x17e8 <__floatsisf+0x12>
    17da:	90 95       	com	r25
    17dc:	80 95       	com	r24
    17de:	70 95       	com	r23
    17e0:	61 95       	neg	r22
    17e2:	7f 4f       	sbci	r23, 0xFF	; 255
    17e4:	8f 4f       	sbci	r24, 0xFF	; 255
    17e6:	9f 4f       	sbci	r25, 0xFF	; 255
    17e8:	99 23       	and	r25, r25
    17ea:	a9 f0       	breq	.+42     	; 0x1816 <__floatsisf+0x40>
    17ec:	f9 2f       	mov	r31, r25
    17ee:	96 e9       	ldi	r25, 0x96	; 150
    17f0:	bb 27       	eor	r27, r27
    17f2:	93 95       	inc	r25
    17f4:	f6 95       	lsr	r31
    17f6:	87 95       	ror	r24
    17f8:	77 95       	ror	r23
    17fa:	67 95       	ror	r22
    17fc:	b7 95       	ror	r27
    17fe:	f1 11       	cpse	r31, r1
    1800:	f8 cf       	rjmp	.-16     	; 0x17f2 <__floatsisf+0x1c>
    1802:	fa f4       	brpl	.+62     	; 0x1842 <__floatsisf+0x6c>
    1804:	bb 0f       	add	r27, r27
    1806:	11 f4       	brne	.+4      	; 0x180c <__floatsisf+0x36>
    1808:	60 ff       	sbrs	r22, 0
    180a:	1b c0       	rjmp	.+54     	; 0x1842 <__floatsisf+0x6c>
    180c:	6f 5f       	subi	r22, 0xFF	; 255
    180e:	7f 4f       	sbci	r23, 0xFF	; 255
    1810:	8f 4f       	sbci	r24, 0xFF	; 255
    1812:	9f 4f       	sbci	r25, 0xFF	; 255
    1814:	16 c0       	rjmp	.+44     	; 0x1842 <__floatsisf+0x6c>
    1816:	88 23       	and	r24, r24
    1818:	11 f0       	breq	.+4      	; 0x181e <__floatsisf+0x48>
    181a:	96 e9       	ldi	r25, 0x96	; 150
    181c:	11 c0       	rjmp	.+34     	; 0x1840 <__floatsisf+0x6a>
    181e:	77 23       	and	r23, r23
    1820:	21 f0       	breq	.+8      	; 0x182a <__floatsisf+0x54>
    1822:	9e e8       	ldi	r25, 0x8E	; 142
    1824:	87 2f       	mov	r24, r23
    1826:	76 2f       	mov	r23, r22
    1828:	05 c0       	rjmp	.+10     	; 0x1834 <__floatsisf+0x5e>
    182a:	66 23       	and	r22, r22
    182c:	71 f0       	breq	.+28     	; 0x184a <__floatsisf+0x74>
    182e:	96 e8       	ldi	r25, 0x86	; 134
    1830:	86 2f       	mov	r24, r22
    1832:	70 e0       	ldi	r23, 0x00	; 0
    1834:	60 e0       	ldi	r22, 0x00	; 0
    1836:	2a f0       	brmi	.+10     	; 0x1842 <__floatsisf+0x6c>
    1838:	9a 95       	dec	r25
    183a:	66 0f       	add	r22, r22
    183c:	77 1f       	adc	r23, r23
    183e:	88 1f       	adc	r24, r24
    1840:	da f7       	brpl	.-10     	; 0x1838 <__floatsisf+0x62>
    1842:	88 0f       	add	r24, r24
    1844:	96 95       	lsr	r25
    1846:	87 95       	ror	r24
    1848:	97 f9       	bld	r25, 7
    184a:	08 95       	ret

0000184c <__fp_inf>:
    184c:	97 f9       	bld	r25, 7
    184e:	9f 67       	ori	r25, 0x7F	; 127
    1850:	80 e8       	ldi	r24, 0x80	; 128
    1852:	70 e0       	ldi	r23, 0x00	; 0
    1854:	60 e0       	ldi	r22, 0x00	; 0
    1856:	08 95       	ret

00001858 <__fp_nan>:
    1858:	9f ef       	ldi	r25, 0xFF	; 255
    185a:	80 ec       	ldi	r24, 0xC0	; 192
    185c:	08 95       	ret

0000185e <__fp_pscA>:
    185e:	00 24       	eor	r0, r0
    1860:	0a 94       	dec	r0
    1862:	16 16       	cp	r1, r22
    1864:	17 06       	cpc	r1, r23
    1866:	18 06       	cpc	r1, r24
    1868:	09 06       	cpc	r0, r25
    186a:	08 95       	ret

0000186c <__fp_pscB>:
    186c:	00 24       	eor	r0, r0
    186e:	0a 94       	dec	r0
    1870:	12 16       	cp	r1, r18
    1872:	13 06       	cpc	r1, r19
    1874:	14 06       	cpc	r1, r20
    1876:	05 06       	cpc	r0, r21
    1878:	08 95       	ret

0000187a <__fp_round>:
    187a:	09 2e       	mov	r0, r25
    187c:	03 94       	inc	r0
    187e:	00 0c       	add	r0, r0
    1880:	11 f4       	brne	.+4      	; 0x1886 <__fp_round+0xc>
    1882:	88 23       	and	r24, r24
    1884:	52 f0       	brmi	.+20     	; 0x189a <__fp_round+0x20>
    1886:	bb 0f       	add	r27, r27
    1888:	40 f4       	brcc	.+16     	; 0x189a <__fp_round+0x20>
    188a:	bf 2b       	or	r27, r31
    188c:	11 f4       	brne	.+4      	; 0x1892 <__fp_round+0x18>
    188e:	60 ff       	sbrs	r22, 0
    1890:	04 c0       	rjmp	.+8      	; 0x189a <__fp_round+0x20>
    1892:	6f 5f       	subi	r22, 0xFF	; 255
    1894:	7f 4f       	sbci	r23, 0xFF	; 255
    1896:	8f 4f       	sbci	r24, 0xFF	; 255
    1898:	9f 4f       	sbci	r25, 0xFF	; 255
    189a:	08 95       	ret

0000189c <__fp_split3>:
    189c:	57 fd       	sbrc	r21, 7
    189e:	90 58       	subi	r25, 0x80	; 128
    18a0:	44 0f       	add	r20, r20
    18a2:	55 1f       	adc	r21, r21
    18a4:	59 f0       	breq	.+22     	; 0x18bc <__fp_splitA+0x10>
    18a6:	5f 3f       	cpi	r21, 0xFF	; 255
    18a8:	71 f0       	breq	.+28     	; 0x18c6 <__fp_splitA+0x1a>
    18aa:	47 95       	ror	r20

000018ac <__fp_splitA>:
    18ac:	88 0f       	add	r24, r24
    18ae:	97 fb       	bst	r25, 7
    18b0:	99 1f       	adc	r25, r25
    18b2:	61 f0       	breq	.+24     	; 0x18cc <__fp_splitA+0x20>
    18b4:	9f 3f       	cpi	r25, 0xFF	; 255
    18b6:	79 f0       	breq	.+30     	; 0x18d6 <__fp_splitA+0x2a>
    18b8:	87 95       	ror	r24
    18ba:	08 95       	ret
    18bc:	12 16       	cp	r1, r18
    18be:	13 06       	cpc	r1, r19
    18c0:	14 06       	cpc	r1, r20
    18c2:	55 1f       	adc	r21, r21
    18c4:	f2 cf       	rjmp	.-28     	; 0x18aa <__fp_split3+0xe>
    18c6:	46 95       	lsr	r20
    18c8:	f1 df       	rcall	.-30     	; 0x18ac <__fp_splitA>
    18ca:	08 c0       	rjmp	.+16     	; 0x18dc <__fp_splitA+0x30>
    18cc:	16 16       	cp	r1, r22
    18ce:	17 06       	cpc	r1, r23
    18d0:	18 06       	cpc	r1, r24
    18d2:	99 1f       	adc	r25, r25
    18d4:	f1 cf       	rjmp	.-30     	; 0x18b8 <__fp_splitA+0xc>
    18d6:	86 95       	lsr	r24
    18d8:	71 05       	cpc	r23, r1
    18da:	61 05       	cpc	r22, r1
    18dc:	08 94       	sec
    18de:	08 95       	ret

000018e0 <__fp_zero>:
    18e0:	e8 94       	clt

000018e2 <__fp_szero>:
    18e2:	bb 27       	eor	r27, r27
    18e4:	66 27       	eor	r22, r22
    18e6:	77 27       	eor	r23, r23
    18e8:	cb 01       	movw	r24, r22
    18ea:	97 f9       	bld	r25, 7
    18ec:	08 95       	ret

000018ee <__mulsf3>:
    18ee:	0e 94 8a 0c 	call	0x1914	; 0x1914 <__mulsf3x>
    18f2:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__fp_round>
    18f6:	0e 94 2f 0c 	call	0x185e	; 0x185e <__fp_pscA>
    18fa:	38 f0       	brcs	.+14     	; 0x190a <__mulsf3+0x1c>
    18fc:	0e 94 36 0c 	call	0x186c	; 0x186c <__fp_pscB>
    1900:	20 f0       	brcs	.+8      	; 0x190a <__mulsf3+0x1c>
    1902:	95 23       	and	r25, r21
    1904:	11 f0       	breq	.+4      	; 0x190a <__mulsf3+0x1c>
    1906:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__fp_inf>
    190a:	0c 94 2c 0c 	jmp	0x1858	; 0x1858 <__fp_nan>
    190e:	11 24       	eor	r1, r1
    1910:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__fp_szero>

00001914 <__mulsf3x>:
    1914:	0e 94 4e 0c 	call	0x189c	; 0x189c <__fp_split3>
    1918:	70 f3       	brcs	.-36     	; 0x18f6 <__mulsf3+0x8>

0000191a <__mulsf3_pse>:
    191a:	95 9f       	mul	r25, r21
    191c:	c1 f3       	breq	.-16     	; 0x190e <__mulsf3+0x20>
    191e:	95 0f       	add	r25, r21
    1920:	50 e0       	ldi	r21, 0x00	; 0
    1922:	55 1f       	adc	r21, r21
    1924:	62 9f       	mul	r22, r18
    1926:	f0 01       	movw	r30, r0
    1928:	72 9f       	mul	r23, r18
    192a:	bb 27       	eor	r27, r27
    192c:	f0 0d       	add	r31, r0
    192e:	b1 1d       	adc	r27, r1
    1930:	63 9f       	mul	r22, r19
    1932:	aa 27       	eor	r26, r26
    1934:	f0 0d       	add	r31, r0
    1936:	b1 1d       	adc	r27, r1
    1938:	aa 1f       	adc	r26, r26
    193a:	64 9f       	mul	r22, r20
    193c:	66 27       	eor	r22, r22
    193e:	b0 0d       	add	r27, r0
    1940:	a1 1d       	adc	r26, r1
    1942:	66 1f       	adc	r22, r22
    1944:	82 9f       	mul	r24, r18
    1946:	22 27       	eor	r18, r18
    1948:	b0 0d       	add	r27, r0
    194a:	a1 1d       	adc	r26, r1
    194c:	62 1f       	adc	r22, r18
    194e:	73 9f       	mul	r23, r19
    1950:	b0 0d       	add	r27, r0
    1952:	a1 1d       	adc	r26, r1
    1954:	62 1f       	adc	r22, r18
    1956:	83 9f       	mul	r24, r19
    1958:	a0 0d       	add	r26, r0
    195a:	61 1d       	adc	r22, r1
    195c:	22 1f       	adc	r18, r18
    195e:	74 9f       	mul	r23, r20
    1960:	33 27       	eor	r19, r19
    1962:	a0 0d       	add	r26, r0
    1964:	61 1d       	adc	r22, r1
    1966:	23 1f       	adc	r18, r19
    1968:	84 9f       	mul	r24, r20
    196a:	60 0d       	add	r22, r0
    196c:	21 1d       	adc	r18, r1
    196e:	82 2f       	mov	r24, r18
    1970:	76 2f       	mov	r23, r22
    1972:	6a 2f       	mov	r22, r26
    1974:	11 24       	eor	r1, r1
    1976:	9f 57       	subi	r25, 0x7F	; 127
    1978:	50 40       	sbci	r21, 0x00	; 0
    197a:	9a f0       	brmi	.+38     	; 0x19a2 <__mulsf3_pse+0x88>
    197c:	f1 f0       	breq	.+60     	; 0x19ba <__mulsf3_pse+0xa0>
    197e:	88 23       	and	r24, r24
    1980:	4a f0       	brmi	.+18     	; 0x1994 <__mulsf3_pse+0x7a>
    1982:	ee 0f       	add	r30, r30
    1984:	ff 1f       	adc	r31, r31
    1986:	bb 1f       	adc	r27, r27
    1988:	66 1f       	adc	r22, r22
    198a:	77 1f       	adc	r23, r23
    198c:	88 1f       	adc	r24, r24
    198e:	91 50       	subi	r25, 0x01	; 1
    1990:	50 40       	sbci	r21, 0x00	; 0
    1992:	a9 f7       	brne	.-22     	; 0x197e <__mulsf3_pse+0x64>
    1994:	9e 3f       	cpi	r25, 0xFE	; 254
    1996:	51 05       	cpc	r21, r1
    1998:	80 f0       	brcs	.+32     	; 0x19ba <__mulsf3_pse+0xa0>
    199a:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__fp_inf>
    199e:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__fp_szero>
    19a2:	5f 3f       	cpi	r21, 0xFF	; 255
    19a4:	e4 f3       	brlt	.-8      	; 0x199e <__mulsf3_pse+0x84>
    19a6:	98 3e       	cpi	r25, 0xE8	; 232
    19a8:	d4 f3       	brlt	.-12     	; 0x199e <__mulsf3_pse+0x84>
    19aa:	86 95       	lsr	r24
    19ac:	77 95       	ror	r23
    19ae:	67 95       	ror	r22
    19b0:	b7 95       	ror	r27
    19b2:	f7 95       	ror	r31
    19b4:	e7 95       	ror	r30
    19b6:	9f 5f       	subi	r25, 0xFF	; 255
    19b8:	c1 f7       	brne	.-16     	; 0x19aa <__mulsf3_pse+0x90>
    19ba:	fe 2b       	or	r31, r30
    19bc:	88 0f       	add	r24, r24
    19be:	91 1d       	adc	r25, r1
    19c0:	96 95       	lsr	r25
    19c2:	87 95       	ror	r24
    19c4:	97 f9       	bld	r25, 7
    19c6:	08 95       	ret

000019c8 <__tablejump2__>:
    19c8:	ee 0f       	add	r30, r30
    19ca:	ff 1f       	adc	r31, r31
    19cc:	05 90       	lpm	r0, Z+
    19ce:	f4 91       	lpm	r31, Z
    19d0:	e0 2d       	mov	r30, r0
    19d2:	09 94       	ijmp

000019d4 <__umulhisi3>:
    19d4:	a2 9f       	mul	r26, r18
    19d6:	b0 01       	movw	r22, r0
    19d8:	b3 9f       	mul	r27, r19
    19da:	c0 01       	movw	r24, r0
    19dc:	a3 9f       	mul	r26, r19
    19de:	70 0d       	add	r23, r0
    19e0:	81 1d       	adc	r24, r1
    19e2:	11 24       	eor	r1, r1
    19e4:	91 1d       	adc	r25, r1
    19e6:	b2 9f       	mul	r27, r18
    19e8:	70 0d       	add	r23, r0
    19ea:	81 1d       	adc	r24, r1
    19ec:	11 24       	eor	r1, r1
    19ee:	91 1d       	adc	r25, r1
    19f0:	08 95       	ret

000019f2 <strcat>:
    19f2:	fb 01       	movw	r30, r22
    19f4:	dc 01       	movw	r26, r24
    19f6:	0d 90       	ld	r0, X+
    19f8:	00 20       	and	r0, r0
    19fa:	e9 f7       	brne	.-6      	; 0x19f6 <strcat+0x4>
    19fc:	11 97       	sbiw	r26, 0x01	; 1
    19fe:	01 90       	ld	r0, Z+
    1a00:	0d 92       	st	X+, r0
    1a02:	00 20       	and	r0, r0
    1a04:	e1 f7       	brne	.-8      	; 0x19fe <strcat+0xc>
    1a06:	08 95       	ret

00001a08 <strcpy>:
    1a08:	fb 01       	movw	r30, r22
    1a0a:	dc 01       	movw	r26, r24
    1a0c:	01 90       	ld	r0, Z+
    1a0e:	0d 92       	st	X+, r0
    1a10:	00 20       	and	r0, r0
    1a12:	e1 f7       	brne	.-8      	; 0x1a0c <strcpy+0x4>
    1a14:	08 95       	ret

00001a16 <eeprom_read_byte>:
    1a16:	e1 99       	sbic	0x1c, 1	; 28
    1a18:	fe cf       	rjmp	.-4      	; 0x1a16 <eeprom_read_byte>
    1a1a:	9f bb       	out	0x1f, r25	; 31
    1a1c:	8e bb       	out	0x1e, r24	; 30
    1a1e:	e0 9a       	sbi	0x1c, 0	; 28
    1a20:	99 27       	eor	r25, r25
    1a22:	8d b3       	in	r24, 0x1d	; 29
    1a24:	08 95       	ret

00001a26 <eeprom_write_byte>:
    1a26:	26 2f       	mov	r18, r22

00001a28 <eeprom_write_r18>:
    1a28:	e1 99       	sbic	0x1c, 1	; 28
    1a2a:	fe cf       	rjmp	.-4      	; 0x1a28 <eeprom_write_r18>
    1a2c:	9f bb       	out	0x1f, r25	; 31
    1a2e:	8e bb       	out	0x1e, r24	; 30
    1a30:	2d bb       	out	0x1d, r18	; 29
    1a32:	0f b6       	in	r0, 0x3f	; 63
    1a34:	f8 94       	cli
    1a36:	e2 9a       	sbi	0x1c, 2	; 28
    1a38:	e1 9a       	sbi	0x1c, 1	; 28
    1a3a:	0f be       	out	0x3f, r0	; 63
    1a3c:	01 96       	adiw	r24, 0x01	; 1
    1a3e:	08 95       	ret

00001a40 <_exit>:
    1a40:	f8 94       	cli

00001a42 <__stop_program>:
    1a42:	ff cf       	rjmp	.-2      	; 0x1a42 <__stop_program>
