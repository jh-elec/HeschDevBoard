/* Generated by Header_Generator V1.0 */ 

/*
* Project Name -> Kalibrierumschaltbaugruppe Kombi 2017
* Version      -> 1.0
* Author       -> Hm
* Build Date   -> 21.04.2017
* Description  -> Hardware Defines			  
*/				  

#ifndef HARD_DEF_H
#define HARD_DEF_H

/* ONLY FOR INTERNAL USE! */
#define DDR(PORTx) (*(&PORTx-1))

#include <avr/io.h>


/* Display */
#define GLCD_DDR				DDRA
#define GLCD_PORT				PORTA
#define GLCD_CS1_bp				7	
#define GLCD_RES_bp				6
#define GLCD_A0_bp				5
#define GLCD_SCL_bp				4
#define GLCD_DATA_bp			3

#define GLCD_LED_DDR			DDRC
#define GLCD_LED_PORT			PORTC
#define GLCD_LED_BLUE_bp		7
#define GLCD_LED_GREEN_bp		6
#define GLCD_LED_RED_bp			5

/* Rotary encoder */
#define ENC_DDR					DDRA
#define ENC_PORT				PORTA
#define ENC_PIN					PINA
#define ENC_A					2
#define ENC_B					1

#define ENC_SWITCH_DDR			DDRB
#define ENC_SWITCH_PORT			PINB
#define ENC_SWITCH_bp			4

/* Supply Monitoring */
#define MEASURE_VCC_DDR			DDRA
#define MEASURE_VCC_PORT		PORTA
#define MEASURE_VCC_bp			0

/* LEDÂ´s */
#define LED_HEARTBEAT_DDR		DDRB
#define LED_HEARTBEAT_PORT		PORTB
#define LED_HEARTBEAT_bp		7

/* Actors */
#define VIBRATION_MOTOR_DDR		DDRB
#define VIBRATION_MOTOR_PORT	PORTB
#define VIBRATION_MOTOR_bp		6

/* Switches */
#define SWIICH_DDR				DDRB
#define SWITCH_PIN				PINB
#define SWITCH_PORT				PORTB
#define SWITCH_ENTER_bp			3			
#define SWITCH_UP_bp			2
#define SWITCH_DOWN_bp			1
#define SWITCH_RETURN_bp		0

/* Sound */
#define SOUND_DDR				DDRC
#define SOUND_PORT				PORTC
#define SOUND_bp				4

/* Relais */
#define RELAIS_PORT1_DDR		DDRD
#define RELAIS_PORT1_PORT		PORTD
enum relais_port1
{
	RELAIS_1_PORT1 = 1<<2,
	RELAIS_2_PORT1 = 1<<3,
	RELAIS_3_PORT1 = 1<<4,
	RELAIS_4_PORT1 = 1<<5,
	RELAIS_5_PORT1 = 1<<6,
	RELAIS_6_PORT1 = 1<<7,
};

#define RELAIS_PORT2_DDR		DDRC
#define RELAIS_PORT2_PORT		PORTC
enum relais_port2
{
	RELAIS_7_PORT2 = 1<<2,
	RELAIS_8_PORT2 = 1<<3,	
};

/* I2C */
#define I2C_DDR					DDRC
#define I2C_PORT				PORTC
#define I2C_SCL_bp				0
#define I2C_SDA_bp				1

/* UART */
#define UART_DDR				DDRD
#define UART_PORT				PORTD
#define UART_TX					1
#define UART_RX					0



/* Portexpander Bit Positions (IC7) */
enum mcp23017_gpa
{
	LED_SEGMENT_A		= 1<<0, // GPA0
	LED_SEGMENT_B		= 1<<1, // GPA1
	LED_SEGMENT_C		= 1<<2, // GPA2
	LED_SEGMENT_D		= 1<<3, // GPA3
	LED_SEGMENT_E		= 1<<4, // GPA4
	LED_SEGMENT_F		= 1<<5, // GPA5
	LED_SEGMENT_G		= 1<<6, // GPA6
	LED_SEGMENT_DP		= 1<<7, // GPA7	
};

enum mcp23017_gpb
{
	GPB0				= 1<<0,	// GPB0
	GPB1				= 1<<1,	// GPB1
	GPB2				= 1<<2,	// GPB2
	DRIVE_dig_4			= 1<<3, // GPB3
	DRIVE_dig_3			= 1<<4, // GPB4
	DRIVE_dig_2			= 1<<5,	// GPB5
	DRIVE_dig_1			= 1<<6,	// GPB6
	REFERENCE_ENABLE	= 1<<7, // GPB7	
};


/* MACROS */
#define SGF(BIT)		(sys.GF |=  (1<<BIT)) // set global flag
#define CGF(BIT)		(sys.GF &= ~(1<<BIT)) // clear global flag
#define GGF(   )		(sys.GF)			// get global flag

#define BS(port,bit)	(port|=(1<<bit))
#define BC(port,bit)	(port&=~(1<<bit))
#define BMC(VAR)		(VAR=0)

#define BEEP_ON			SOUND_PORT |=   1<<SOUND_bp;
#define BEEP_OFF		SOUND_PORT &= ~(1<<SOUND_bp);

#define VIB_ON			VIBRATION_MOTOR_PORT |= 1<<VIBRATION_MOTOR_bp;
#define VIB_OFF			VIBRATION_MOTOR_PORT &= ~(1<<VIBRATION_MOTOR_bp);

/* Enums */
enum GLOBAL_FLAG
{
	SYS_BEEPER_ON		= 0,
	ADMIN_LOGGED_IN		= 1,	
};

#endif